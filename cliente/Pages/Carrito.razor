@page "/carrito"
@using cliente.Services
@using cliente.Dtos
@inject CarritoService CarritoService


<h3>Carrito de compras</h3>

@if (productos.Count == 0)
{
    <p>No hay productos en el carrito.</p>
}
else
{
    <ul>
        @foreach (var producto in productos)
        {
            <li>
                <img src="@producto.ImagenUrl" alt="@producto.Nombre" width="50" />
                <strong>@producto.Nombre</strong> - @producto.Precio.ToString("C")
                <button class="btn btn-danger btn-sm" @onclick="() => Quitar(producto)">Quitar</button>
            </li>
        }
    </ul>
    <button class="btn btn-success" @onclick="ConfirmarCompra">Confirmar compra</button>
}

@code {
    private List<ProductoDto> productos = new();

    protected override void OnInitialized()
    {
        productos = CarritoService.ObtenerProductos().ToList();
    }

    private void Quitar(ProductoDto producto)
    {
        CarritoService.QuitarProducto(producto);
        productos = CarritoService.ObtenerProductos().ToList();
        StateHasChanged();
    }

    private async Task ConfirmarCompra()
    {
        await CarritoService.ConfirmarCompra("Cliente de prueba"); // Reemplaza con la l√≥gica para obtener el nombre del cliente
        productos.Clear();
        StateHasChanged();
    }
}
