@page "/"
@page "/catalogo"
@using cliente.Services
@using cliente.Dtos
@inject ProductoService ProductoService
@inject CarritoService CarritoService

<h1>Cat√°logo</h1>

@if (productos is null)
{
    <p>Cargando...</p>
}
else if (!productos.Any())
{
    <p>No se encontraron productos.</p>
}
else
{
    <div class="row">
        @foreach (var producto in productos)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="card-title">@producto.Nombre</h5>
                        <p class="card-text">@producto.Descripcion</p>
                        <p class="card-text"><strong>@producto.Precio.ToString("C")</strong></p>
                        <button class="btn btn-primary" @onclick="() => AgregarAlCarrito(producto.Id)">
                            Agregar al carrito
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<ProductoDto>? productos;
    private string filtro = "";

    protected override async Task OnInitializedAsync() => await CargarProductos();

    private async Task CargarProductos()
    {
        productos = await ProductoService.ObtenerProductos(filtro);
    }

private async Task AgregarAlCarrito(int id)
{
    try
    {
        await CarritoService.AgregarProducto(id);
        await CargarProductos();
    }
    catch (Exception ex)
    {
        Console.WriteLine("Error al agregar al carrito: " + ex.Message);
    }
}
}
}