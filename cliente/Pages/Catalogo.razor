@page "/"
@inject ProductoService ProductoService
@inject CarritoService CarritoService

<h3>Cat√°logo de Productos</h3>

<input @bind="filtro" @bind:event="oninput"
       placeholder="Buscar..." class="form-control mb-3" />

@if (productos is null) { <p>Cargando...</p> }
else if (!productos.Any()) { <p>No se encontraron productos.</p> }
else
{
    <div class="row">
        @foreach (var p in productos)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <img src="@p.ImagenUrl" class="card-img-top" style="height:200px;object-fit:cover;" />
                    <div class="card-body">
                        <h5>@p.Nombre</h5>
                        <p>@p.Descripcion</p>
                        <p><strong>$@p.Precio</strong></p>
                        <p>Stock: @p.Stock</p>
                        <button class="btn btn-primary"
                                @onclick="() => AgregarAlCarrito(p.Id)"
                                disabled="@(p.Stock == 0)">
                            Agregar al carrito
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<ProductoDto>? productos;
    private string filtro = "";

    protected override async Task OnInitializedAsync() => await CargarProductos();

    private async Task CargarProductos() =>
        productos = await ProductoService.GetProductos(filtro);

    private async Task AgregarAlCarrito(int id)
    {
        await CarritoService.AgregarProducto(id);
        await CargarProductos();
    }
}
