@page "/productos"
@using cliente.Dtos
@using cliente.Services
@inject ProductoService ProductoService
@inject CarritoService CarritoService

@inject ProductoService ProductoService
@inject CarritoService CarritoService

<h3>Productos</h3>

@if (productos is null)
{
    <p>Cargando productos...</p>
}
else
{
    <div class="row">
        @foreach (var producto in productos)
        {
            <div class="card col-md-3 m-2 p-2 border rounded">
                <img src="@producto.ImagenUrl" alt="@producto.Nombre" class="img-fluid" />
                <h5>@producto.Nombre</h5>
                <p>@producto.Descripcion</p>
                <p><strong>Precio:</strong> $@producto.Precio</p>
                <p><strong>Stock:</strong> @producto.Stock</p>
                <button class="btn btn-primary" @onclick="@(() => Agregar(producto))">Agregar al carrito</button>
            </div>
        }
    </div>
}

@code {
    List<ProductoDto>? productos;

    protected override async Task OnInitializedAsync()
    {
        productos = await ProductoService.ObtenerProductos();
    }

    void Agregar(ProductoDto producto)
    {
        CarritoService.AgregarProducto(producto);
    }
}
