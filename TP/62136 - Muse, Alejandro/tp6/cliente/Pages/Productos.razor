@page "/productos"
@using cliente.Models
@inject cliente.Services.ApiService ApiService
@inject cliente.Services.ProductoService ProductoService
@inject cliente.Services.CarritoService CarritoService

<h3>Catálogo de Productos</h3>

<div style="margin-bottom: 10px;">
    <input type="text" class="form-control" style="width: 200px; display: inline-block;" placeholder="Buscar..." @bind="busqueda" />
    <button class="btn btn-primary" style="margin-left: 5px;" @onclick="Buscar">Buscar</button>
</div>

@if (productos == null)
{
    <p>Cargando productos...</p>
}
else if (productos.Count == 0)
{
    <p>No hay productos para mostrar.</p>
}
else
{
    <div style="display: flex; flex-wrap: wrap; gap: 16px;">
        @foreach (var p in ProductoService.Productos)
        {
            <div style="border: 1px solid #ccc; padding: 10px; width: 220px;">
                <img src="@($"http://localhost:5184{p.ImagenUrl}")" alt="@p.Nombre" style="width:200px;height:200px;object-fit:cover;" />
                <h4>@p.Nombre</h4>
                <p>@p.Descripcion</p>
                <p><b>Precio:</b> $@p.Precio</p>
                <p><b>Stock:</b> @p.Stock</p>
                <button class="btn btn-success"
                        @onclick="() => AgregarAlCarrito(p)"
                        disabled="@(p.Stock == 0)">
                    Agregar al carrito
                </button>
            </div>
        }
    </div>
}

@code {
    List<Producto>? productos;
    string? busqueda;

    // Simulación de carrito local (luego se hará con API)
    List<Producto> carrito = new();

    protected override async Task OnInitializedAsync()
    {
        if (ProductoService.Productos.Count == 0)
        {
            var productos = await ApiService.GetProductos();
            ProductoService.SetProductos(productos);
        }

        productos = ProductoService.Productos;
    }

    async Task Buscar()
    {
        productos = await ApiService.ObtenerProductosAsync(busqueda);
    }

    void AgregarAlCarrito(Producto producto)
    {
        if (producto.Stock > 0)
        {
            producto.Stock--;
            CarritoService.Agregar(producto);
        }
    }
}

