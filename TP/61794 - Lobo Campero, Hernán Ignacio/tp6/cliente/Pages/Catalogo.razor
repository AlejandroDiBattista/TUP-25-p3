@page "/"
@inject Cliente.Services.ApiService ApiService
@inject IJSRuntime JS

@code {
    [CascadingParameter] public Action<int>? ActualizarCarrito { get; set; }
    [CascadingParameter] public int CarritoCantidad { get; set; }

    private List<Cliente.Models.Producto>? productos;
    private int carritoCantidad = 0;
    private int carritoId = 0;

    protected override async Task OnInitializedAsync()
    {
        await Buscar();
        await InicializarCarrito();
    }

    public async Task Buscar(string? query = null)
    {
        productos = await ApiService.GetProductosAsync(query);
        StateHasChanged();
    }

    private async Task InicializarCarrito()
    {
        if (carritoId == 0)
        {
            var response = await ApiService.HttpClient.PostAsync("/carritos", null);
            if (response.IsSuccessStatusCode)
            {
                var id = await response.Content.ReadFromJsonAsync<int>();
                carritoId = id;
            }
        }
    }

    private async Task AgregarAlCarrito(int productoId)
    {
        await InicializarCarrito();
        var response = await ApiService.HttpClient.PutAsync($"/carritos/{carritoId}/{productoId}?cantidad=1", null);
        if (response.IsSuccessStatusCode)
        {
            carritoCantidad++;
            ActualizarCarrito?.Invoke(carritoCantidad);
            // Feedback visual
            await JS.InvokeVoidAsync("eval", $"document.getElementById('btn-cart-{productoId}').classList.add('btn-warning'); setTimeout(()=>document.getElementById('btn-cart-{productoId}').classList.remove('btn-warning'), 500)");
            StateHasChanged();
        }
    }
}

<div class="container py-4">
    <div class="row mb-4">
        <div class="col-12 text-center">
            <h2 class="fw-bold mb-3">Cat√°logo de Productos</h2>
        </div>
    </div>

    @if (productos is null)
    {
        <div class="text-center my-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
            <p class="mt-3">Cargando productos...</p>
        </div>
    }
    else if (productos.Count == 0)
    {
        <div class="alert alert-warning text-center">No se encontraron productos.</div>
    }
    else
    {
        <div class="row g-4 justify-content-center">
            @foreach (var prod in productos)
            {
                <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                    <div class="card h-100 shadow-sm border-0">
                        <img src="images/@prod.ImagenUrl" class="card-img-top p-3 bg-light" alt="@prod.Nombre" style="height:180px;object-fit:contain;" />
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title fw-semibold">@prod.Nombre</h5>
                            <p class="card-text small text-secondary">@prod.Descripcion</p>
                            <div class="mt-auto">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <span class="badge bg-success">Stock: @prod.Stock</span>
                                    <span class="fw-bold text-primary">$@prod.Precio</span>
                                </div>
                                <button class="btn btn-success w-100 animate__animated animate__pulse" id="btn-cart-@prod.Id" @onclick="() => AgregarAlCarrito(prod.Id)">
                                    <i class="bi bi-cart-plus me-2"></i>Agregar al carrito
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>
