// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TiendaOnline.Data;

#nullable disable

namespace servidor.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250614221320_ResetCreate")]
    partial class ResetCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("TiendaOnline.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoCliente")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailCliente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("TiendaOnline.Models.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCompra");
                });

            modelBuilder.Entity("TiendaOnline.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Celular moderno y rápido",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Celular XYZ",
                            Precio = 15000m,
                            Stock = 5
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Auriculares inalámbricos",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Auriculares ABC",
                            Precio = 3000m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Reloj inteligente",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Smartwatch 123",
                            Precio = 7000m,
                            Stock = 8
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Cargador USB tipo C",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Cargador rápido",
                            Precio = 1200m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Batería portátil",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Powerbank 10000mAh",
                            Precio = 2500m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Mouse ergonómico",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Mouse inalámbrico",
                            Precio = 1800m,
                            Stock = 12
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Teclado con retroiluminación",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Teclado mecánico",
                            Precio = 5000m,
                            Stock = 7
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Monitor Full HD",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Monitor 24\"",
                            Precio = 12000m,
                            Stock = 4
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Pendrive rápido",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Memoria USB 64GB",
                            Precio = 1000m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Cable para video",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Cable HDMI",
                            Precio = 800m,
                            Stock = 30
                        });
                });

            modelBuilder.Entity("TiendaOnline.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TiendaOnline.Models.ItemCompra", b =>
                {
                    b.HasOne("TiendaOnline.Models.Compra", "Compra")
                        .WithMany("Items")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaOnline.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("TiendaOnline.Models.Compra", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
