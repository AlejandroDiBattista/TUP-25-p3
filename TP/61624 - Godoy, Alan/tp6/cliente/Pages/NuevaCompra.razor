@page "/nuevacompra"
@inject ProductoService ProductoService
@inject CompraService CompraService

<h3>Realizar compra</h3>

@if (productos is null)
{
    <p>Cargando productos...</p>
}
else
{
    <EditForm OnValidSubmit="EnviarCompra">
        @foreach (var producto in productos)
        {
            <div>
                <strong>@producto.Nombre</strong> - $@producto.Precio
                <input type="number" min="0" @bind="cantidades[producto.Id]" />
            </div>
        }

        <button class="btn btn-success mt-3" type="submit">Confirmar compra</button>
    </EditForm>
}

@code {
    List<Producto>? productos;
    Dictionary<int, int> cantidades = new();

    protected override async Task OnInitializedAsync()
    {
        productos = await ProductoService.ObtenerProductos();
        foreach (var p in productos)
            cantidades[p.Id] = 0;
    }

    private async Task EnviarCompra()
    {
        var compra = new Compra
        {
            Items = cantidades
                    .Where(kv => kv.Value > 0)
                    .Select(kv => new ItemCompra
                    {
                        ProductoId = kv.Key,
                        Cantidad = kv.Value
                    }).ToList()
        };

        if (compra.Items.Count == 0)
        {
            Console.WriteLine("No se seleccionaron productos.");
            return;
        }

        await CompraService.RealizarCompra(compra);
        cantidades.Clear();
        foreach (var p in productos!)
            cantidades[p.Id] = 0;
    }
}
