@page "/"
@using cliente.Models
@inject ApiService ApiService

<PageTitle>Productos</PageTitle>

<h1>Catálogo de Productos</h1>

@if (cargando)
{
    <div class="alert alert-info">Cargando productos...</div>
}
else if (productos != null && productos.Any())
{
    <div class="row">
        @foreach (var producto in productos)
        {
            <div class="col-md-4 mb-4">
                <div class="card">
                    <img src="@producto.ImagenUrl" class="card-img-top" alt="@producto.Nombre" style="max-height:200px;object-fit:contain;">
                    <div class="card-body">
                        <h5 class="card-title">@producto.Nombre</h5>
                        <p class="card-text">@producto.Descripcion</p>
                        <p class="card-text"><strong>Precio:</strong> $@producto.Precio</p>
                        <p class="card-text"><strong>Stock:</strong> @producto.Stock</p>
                        <button class="btn btn-primary" disabled>Agregar al carrito</button>
                    </div>
                </div>
            </div>
        }
    </div>
}
else if (error != null)
{
    <div class="alert alert-danger">@error</div>
}
else
{
    <div>No hay productos disponibles.</div>
}

@code {
    private List<Producto> productos;
    private string error;
    private bool cargando = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            productos = await ApiService.ObtenerProductosAsync();
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
        finally
        {
            cargando = false;
        }
    }
}
