@page "/carrito"
@using cliente.Models
@inject CarritoService CarritoService

<h1>Carrito de Compras</h1>

@if (!CarritoService.Items.Any())
{
    <div class="alert alert-info">El carrito está vacío.</div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Producto</th>
                <th>Precio</th>
                <th>Cantidad</th>
                <th>Subtotal</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in CarritoService.Items)
            {
                <tr>
                    <td>@item.Producto.Nombre</td>
                    <td>$@item.Producto.Precio</td>
                    <td>
                        <input type="number" min="1" style="width:60px"
                               @bind="item.Cantidad"
                               @bind:event="oninput"
                               @onchange="(e) => CambiarCantidad(item, e)" />
                    </td>
                    <td>$@(item.Producto.Precio * item.Cantidad)</td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="() => Quitar(item.Producto.Id)">Quitar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <button class="btn btn-warning" @onclick="Vaciar">Vaciar carrito</button>
}

@code {
    private void Quitar(int productoId)
    {
        CarritoService.QuitarDelCarrito(productoId);
    }

    private void Vaciar()
    {
        CarritoService.VaciarCarrito();
    }

    private void CambiarCantidad(CarritoItem item, ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int nuevaCantidad) && nuevaCantidad > 0)
        {
            item.Cantidad = nuevaCantidad;
        }
        else
        {
            item.Cantidad = 1;
        }
        StateHasChanged();
    }
}