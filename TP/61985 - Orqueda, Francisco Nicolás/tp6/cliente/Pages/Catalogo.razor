@page "/catalogo"
@using cliente.Models
@inject ApiService ApiService
@using cliente.Services
@inject NavigationManager NavigationManager
<h1>Cat√°logo de Productos</h1>

<input @bind="busqueda" placeholder="Buscar..." />
<button @onclick="Buscar">Buscar</button>

@if (productos is null)
{
    <p>Cargando productos...</p>
}
else if (!productos.Any())
{
    <p>No hay productos disponibles.</p>
}
else
{
    <div class="row">
        @foreach (var prod in productos)
        {
            <div class="col-4 mb-3">
                <div class="card">
                    <img src="@prod.ImagenUrl" class="card-img-top" style="height:200px;object-fit:cover;" />
                    <div class="card-body">
                        <h5 class="card-title">@prod.Nombre</h5>
                        <p>@prod.Descripcion</p>
                        <p><b>Precio:</b> $@prod.Precio</p>
                        <p><b>Stock:</b> @prod.Stock</p>
                        <button class="btn btn-primary" @onclick="() => AgregarAlCarrito(prod.Id)">Agregar al carrito</button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    List<Producto>? productos;
    string? busqueda;

    protected override async Task OnInitializedAsync()
    {
        productos = await ApiService.ObtenerProductosAsync();
    }

    async Task Buscar()
    {
        productos = await ApiService.ObtenerProductosAsync(busqueda);
    }

    @code {
    Guid carritoId;

    async Task AgregarAlCarrito(int productoId)
    {
        carritoId = await ApiService.CrearCarritoAsync() ?? Guid.NewGuid();
        await ApiService.AgregarProductoAlCarritoAsync(carritoId, productoId, 1);
        NavigationManager.NavigateTo("/carrito");
    }
}
}