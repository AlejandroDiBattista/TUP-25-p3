@page "/productos"
@using cliente.Modelos
@using cliente.Services
@using cliente.Shared
@inject ServicioProductos Services
@inject ServicioCarrito Carritoo
@inject NavigationManager Nav
@inject BusquedaService BusquedaService

<h3>Productos</h3>

@if (productos == null)
{
    <p>Cargando productos...</p>
}
else if (!productos.Any())
{
    <p>No hay productos disponibles.</p>
}
else
{
    @foreach (var producto in productos.Where(p =>
        string.IsNullOrWhiteSpace(BusquedaService.Busqueda) ||
        p.Nombre.Contains(BusquedaService.Busqueda, StringComparison.OrdinalIgnoreCase) ||
        p.Descripcion.Contains(BusquedaService.Busqueda, StringComparison.OrdinalIgnoreCase)))
    {
        <div>
            <span>@producto.Nombre - $@producto.Precio (Stock: @producto.Stock)</span>
            <button @onclick="() => AgregarAlCarrito(producto)">Agregar al carrito</button>
        </div>
    }
}


@code {
    List<Producto> productos;

    protected override async Task OnInitializedAsync()
    {
        productos = await Services.ObtenerProductosAsync();
    }

    protected override void OnInitialized()
    {
        BusquedaService.OnChange += StateHasChanged;
        Carritoo.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        BusquedaService.OnChange -= StateHasChanged;
        Carritoo.OnChange -= StateHasChanged;
    }

    void AgregarAlCarrito(Producto producto)
    {
        Console.WriteLine("Agregando: " + producto.Nombre);
        Carritoo.AgregarAlCarrito(producto);
    }

    void IrAlCarrito()
    {
        Nav.NavigateTo("/carrito");
    }
}
@implements IDisposable