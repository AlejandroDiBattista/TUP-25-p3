@page "/"
@using Blazored.Toast.Services
@using cliente.Services
@using cliente.Models
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IToastService toastService;
@inject ApiService ApiService

<PageTitle>Home</PageTitle>

<div class="row mb-4">
    <div class="col-12 text-center">
        <h1>Nuestros productos</h1>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="input-group flex-nowrap">
            <span class="input-group-text" id="addon-wrapping">
                <i>
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                        class="bi bi-search" viewBox="0 0 16 16">
                        <path
                            d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                    </svg>
                </i>
            </span>
            <input type="text" class="form-control" @oninput="@OnChangeBusqueda" @onkeydown="@EnterEvent"
                placeholder="Busqueda" aria-describedby="addon-wrapping" />
        </div>
        @* <input type="text" @oninput="@OnChangeBusqueda" @onkeydown="@EnterEvent" /> *@
        <div class="row">
            @foreach (Producto producto in Productos)
            {
                <div class="col-sm-12 col-xs-12 col-lg-4 col-xl-4 col-md-4">
                    <div style="margin:1rem; background-color: #fff;">
                        <div style="box-shadow: 0px 5px 17px 0px rgba(0,0,0,0.75);
    -webkit-box-shadow: 0px 5px 17px 0px rgba(0,0,0,0.75);
    -moz-box-shadow: 0px 5px 17px 0px rgba(0,0,0,0.75); border-radius: 6px; padding:1rem">
                            <div style="display: flex; justify-content: center;">
                                <img src="@producto.ImagenUrl" class="card-img-top" style="width: 200px !important;" />
                            </div>
                            <div class="card-body" style="text-align: center;">
                                <h5 class="card-title">@producto.Nombre</h5>
                                <p class="card-text">@producto.Descripcion.</p>
                                @* <div style="display: flex; justify-content:space-between"> *@
                                    <p>Stock: <strong>@producto.Stock</strong></p>
                                    <p>Precio: <strong>$@producto.Precio</strong></p>
                                    <button @onclick="() => AddTodo(producto)" class="btn btn-sm btn-block btn-primary" style="width: 100% !important;">
                                        <i>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                                fill="currentColor" class="bi bi-cart-check" viewBox="0 0 16 16">
                                                <path
                                                    d="M11.354 6.354a.5.5 0 0 0-.708-.708L8 8.293 6.854 7.146a.5.5 0 1 0-.708.708l1.5 1.5a.5.5 0 0 0 .708 0z" />
                                                <path
                                                    d="M.5 1a.5.5 0 0 0 0 1h1.11l.401 1.607 1.498 7.985A.5.5 0 0 0 4 12h1a2 2 0 1 0 0 4 2 2 0 0 0 0-4h7a2 2 0 1 0 0 4 2 2 0 0 0 0-4h1a.5.5 0 0 0 .491-.408l1.5-8A.5.5 0 0 0 14.5 3H2.89l-.405-1.621A.5.5 0 0 0 2 1zm3.915 10L3.102 4h10.796l-1.313 7zM6 14a1 1 0 1 1-2 0 1 1 0 0 1 2 0m7 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0" />
                                            </svg>
                                        </i>
                                        Agregar al carrito
                                    </button>
                                @* </div> *@
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private string busqueda;
    public IList<Carrito> CarritoCompra = new List<Carrito>();
    private IList<Producto> Productos = new List<Producto>();

    protected override async Task OnInitializedAsync()
    {
        Productos = await ApiService.ObtenerProductos() ?? new List<Producto>();
    }

    public async Task EnterEvent(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            Productos = await ApiService.ObtenerProductos(busqueda);
        }
    }
    private void ActualizarContenido()
    {

    }
    private async Task AgregarProducto()
    {
        await ApiService.NuevoProducto(new Producto
        {
            Nombre = "desde Blazor",
            Descripcion = "Blazor",
            Precio = 400,
            @* Stock = 120, *@
            @* ImagenUrl = "Sin path" *@
        });
    }

    private async Task AddTodo(Producto producto)
{
    string carrito = await localStorage.GetItemAsStringAsync("carrito");
    if (string.IsNullOrEmpty(carrito))
        await localStorage.SetItemAsStringAsync("carrito", await ApiService.ObtenerIdCarrito());

    await ApiService.AgregarAlCarrito(producto.Id); // ✅ corregido
    toastService.ShowSuccess("El producto fue agregado al carrito!");
    
}

    private void VerValor(MouseEventArgs e)
    {
        @* Console.WriteLine(nuevo); *@
    }

    private void OnChangeBusqueda(ChangeEventArgs e)
    {
        busqueda = e.Value.ToString();
    }

    private void OnChange(ChangeEventArgs e)
    {
        Console.Write(e.Value.ToString());
    }
}
