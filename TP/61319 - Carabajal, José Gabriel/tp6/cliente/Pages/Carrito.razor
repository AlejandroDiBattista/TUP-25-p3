@page "/carrito"
@using cliente.Models
@using cliente.Componentes
@inject CarritoService carritoService
@inject NavigationManager NavManager
@implements IDisposable

<h3>Tu Carrito</h3>

@if (items == null)
{
    <p>Cargando carrito...</p>
}
else if (!items.Any())
{
    <p>Tu carrito está vacío.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Producto</th>
                <th>Cantidad</th>
                <th>Precio Unitario</th>
                <th>Subtotal</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in items)
            {
                <tr>
                    <td>@item.Producto.Nombre</td>
                    <td>
                        <div class="input-group" style="width:120px;">
                            <button class="btn btn-outline-secondary"
                                    @onclick="() => CambiarCantidad(item, item.Cantidad - 1)"
                                    disabled="@(item.Cantidad <= 1)">-</button>
                            <input type="text" class="form-control text-center" value="@item.Cantidad" readonly />
                            <button class="btn btn-outline-secondary"
                                    @onclick="() => CambiarCantidad(item, item.Cantidad + 1)"
                                    disabled="@(item.Cantidad + 1 > item.Producto.Stock)">+</button>
                        </div>
                    </td>
                    <td>@item.PrecioUnitario:C</td>
                    <td>@(item.PrecioUnitario * item.Cantidad):C</td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="() => Eliminar(item)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="3"><strong>Total:</strong></td>
                <td colspan="2"><strong>@items.Sum(i => i.PrecioUnitario * i.Cantidad):C</strong></td>
            </tr>
        </tfoot>
    </table>

    <div class="d-flex justify-content-between">
        <button class="btn btn-warning" 
            @onclick="VaciarCarrito">
            Vaciar carrito
        </button>
        <button class="btn btn-success" 
            @onclick='() => NavManager.NavigateTo("/confirmacion")'>
            Confirmar Compra
        </button>
    </div>
}

@code {
    private List<ItemCompra>? items;

    protected override async Task OnInitializedAsync()
    {
        items = await carritoService.LoadItemsAsync();
        carritoService.OnChange += Recargar;
    }

    private async void Recargar()
    {
        items = await carritoService.LoadItemsAsync();
        StateHasChanged();
    }

    private async Task CambiarCantidad(ItemCompra item, int nuevaCantidad)
    {
        if (nuevaCantidad <= 0)
            await carritoService.RemoveItemAsync(item.ProductoId);
        else
            await carritoService.AddOrUpdateItemAsync(item.ProductoId, nuevaCantidad);
    }

    private async Task Eliminar(ItemCompra item) =>
        await carritoService.RemoveItemAsync(item.ProductoId);

    private async Task VaciarCarrito() =>
        await carritoService.ClearCartAsync();

    public void Dispose() => carritoService.OnChange -= Recargar;
}
