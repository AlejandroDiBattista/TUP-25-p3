// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using servidor.ModelosServidor;

#nullable disable

namespace servidor.Migrations
{
    [DbContext(typeof(TiendaContext))]
    partial class TiendaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("servidor.ModelosServidor.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoCliente")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailCliente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("servidor.ModelosServidor.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCompra");
                });

            modelBuilder.Entity("servidor.ModelosServidor.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Color: Ultramarine",
                            ImagenUrl = "img/iPhone16.jpg",
                            Nombre = "iPhone 16",
                            Precio = 950000m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Color: Pink",
                            ImagenUrl = "img/iPhone15.jpg",
                            Nombre = "iPhone 15",
                            Precio = 720000m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Color: Gold",
                            ImagenUrl = "img/iPhone14Pro.jpg",
                            Nombre = "iPhone 14 Pro",
                            Precio = 620000m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Color: Graphite",
                            ImagenUrl = "img/iPhone13Pro.jpg",
                            Nombre = "iPhone 13 Pro",
                            Precio = 520000m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Color: Red",
                            ImagenUrl = "img/iPhone12.jpg",
                            Nombre = "iPhone 12",
                            Precio = 320000m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Color: White",
                            ImagenUrl = "img/iPhone11.jpg",
                            Nombre = "iPhone 11",
                            Precio = 220000m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Color: Blue",
                            ImagenUrl = "img/iPhoneXR.jpg",
                            Nombre = "iPhone XR",
                            Precio = 120000m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Color: Red",
                            ImagenUrl = "img/FundaSilicona.jpg",
                            Nombre = "Funda Silicona iPhone 12",
                            Precio = 10000m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Color: Gray",
                            ImagenUrl = "img/iPadAir5.jpg",
                            Nombre = "iPad Air 5",
                            Precio = 720000m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Cargador 20w más cable Lightning",
                            ImagenUrl = "img/CargadorConCable.jpg",
                            Nombre = "Cargador Original Apple",
                            Precio = 20000m,
                            Stock = 20
                        });
                });

            modelBuilder.Entity("servidor.ModelosServidor.ItemCompra", b =>
                {
                    b.HasOne("servidor.ModelosServidor.Compra", "Compra")
                        .WithMany("Items")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("servidor.ModelosServidor.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("servidor.ModelosServidor.Compra", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
