@using cliente.Modelos
<h3 class="text-center mt-3">Carrito de Compras</h3>

@if (itemsCarrito == null)
{
    <div class="text-center">
        <div class="spinner-border" role="status"></div>
        <p>Cargando carrito...</p>
    </div>
}
else if (itemsCarrito.Count == 0)
{
    <p class="text-center text-muted">Tu carrito está vacío.</p>
}
else
{
    <table class="table table-hover">
        <thead class="table-dark">
            <tr>
                <th>Producto</th>
                <th>Cantidad</th>
                <th>Precio Unitario</th>
                <th>Total</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in itemsCarrito)
            {
                <tr>
                    <td>@item.Nombre</td>
                    <td class="text-center">
                        <button class="btn btn-outline-secondary btn-sm" @onclick="()=>ModificarCantidad(item.Id, -1)">➖</button>
                        @item.Cantidad
                        <button class="btn btn-outline-secondary btn-sm" @onclick="()=>ModificarCantidad(item.Id, 1)">➕</button>
                    </td>
                    <td>$@item.PrecioUnitario</td>
                    <td class="fw-bold">$@(item.Cantidad * item.PrecioUnitario)</td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="()=>EliminarProducto(item.Id)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <h4 class="text-end fw-bold">Total: $@total</h4>
    <div class="text-end">
        <button class="btn btn-warning" @onclick="VaciarCarrito">Vaciar carrito</button>
        <button class="btn btn-success" @onclick="ConfirmarCompra">Confirmar compra</button>
    </div>
}

@code {
    private List<Producto> itemsCarrito = new();
    private decimal total = 0;

    private void ModificarCantidad(int productoId, int cambio)
    {
        var item = itemsCarrito.FirstOrDefault(p => p.Id == productoId);
        if (item != null)
        {
            item.Cantidad = Math.Max(1, item.Cantidad + cambio);
        }
        CalcularTotal();
    }

    private void EliminarProducto(int id)
    {
        itemsCarrito.RemoveAll(p => p.Id == id);
        CalcularTotal();
    }

    private void VaciarCarrito()
    {
        itemsCarrito.Clear();
        total = 0;
    }

    private void ConfirmarCompra()
    {
        Console.WriteLine("Compra confirmada");
        VaciarCarrito();
    }

    private void CalcularTotal()
    {
        total = itemsCarrito.Sum(p => p.PrecioUnitario * p.Cantidad);
    }
}