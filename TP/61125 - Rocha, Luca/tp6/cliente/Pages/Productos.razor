@page "/productos"
@using cliente.Modelos
@inject cliente.Services.ProductoService ProductoService
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<h1>Cat√°logo de productos</h1>

@if (productos is null)
{
    <p>Cargando productos...</p>
}
else if (!productos.Any())
{
    <p>No hay productos disponibles.</p>
}
else
{
    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var producto in productos)
        {
            <div class="col">
                <div class="card h-100">
                    <img src="@($"/images/{producto.ImagenUrl ?? "placeholder.png"}")"
                         class="card-img-top"
                         alt="@producto.Nombre"
                         style="height: 180px; object-fit: contain;" />
                    <div class="card-body">
                        <h5 class="card-title">@producto.Nombre</h5>
                        <p class="card-text">@producto.Descripcion</p>
                        <p class="fw-bold">$@producto.Precio</p>
                        <button class="btn btn-primary w-100" @onclick="() => A√±adirAlCarrito(producto)">
                            üõí Agregar al carrito
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Producto>? productos;
    private List<Producto> carrito = new();

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("üìç OnInitializedAsync ejecutado");
        productos = await ProductoService.ObtenerProductosAsync();
        carrito = await LocalStorage.GetItemAsync<List<Producto>>("carrito") ?? new();
    }

    private async Task A√±adirAlCarrito(Producto producto)
    {
        var existente = carrito.FirstOrDefault(p => p.Id == producto.Id);
        if (existente != null)
        {
            existente.Cantidad++;
        }
        else
        {
            carrito.Add(new Producto
            {
                Id = producto.Id,
                Nombre = producto.Nombre,
                Descripcion = producto.Descripcion,
                Precio = producto.Precio,
                ImagenUrl = producto.ImagenUrl,
                Cantidad = 1
            });
        }

        await LocalStorage.SetItemAsync("carrito", carrito);
    }
}