@page "/"
@using cliente.Services
@using cliente.Models
@inject ApiService ApiService
@inject CarritoService CarritoService

<PageTitle>Productos</PageTitle>


<div class="row">
    @if (productos != null && productos.Any())
    {
        @foreach (var producto in productos)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <img src="@producto.ImagenUrl" class="card-img-top" alt="@producto.Nombre" />
                    <div class="card-body">
                        <h5 class="card-title">@producto.Nombre</h5>
                        <p class="card-text">@producto.Descripcion</p>
                        <p class="card-text text-muted">Stock disponible: @producto.Stock</p>
                        <p class="card-text fw-bold">$@producto.Precio</p>
                        <button class="btn btn-primary">Agregar al carrito</button>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p>No hay productos disponibles.</p>
    }
</div>

void AgregarProducto(Producto producto)
{
    CarritoService.AgregarAlCarrito(producto);
}



@code {
    private DatosRespuesta datos;
    private string error;
    private bool cargando = false;

    private async Task ObtenerDatosDelServidor() {
        try {
            cargando = true;
            error = null;
            datos = await ApiService.ObtenerDatosAsync();
        } catch (Exception ex) {
            error = ex.Message;
            datos = null;
        } finally {
            cargando = false;
        }
    }

    private List<Producto> productos = new();

        protected override async Task OnInitializedAsync() {
            productos = await ApiService.ObtenerProductosAsync();       
    }

void AgregarProducto(Producto producto)
{
    CarritoService.AgregarAlCarrito(producto);
}

}
