@page "/"
@using TuProyecto.Models
@using cliente.Services
@inject ApiService ApiService
@inject NavigationManager Nav
@inject IJSRuntime JS
@inject CarritoService CarritoService

<PageTitle>Mi Tienda</PageTitle>

<style>
    body {
        padding-top: 56px;
    }
</style>

<nav class="navbar navbar-expand-lg navbar-dark bg-primary py-1 fixed-top" style="min-height:44px;">
    <div class="container-fluid">
        <a class="navbar-brand py-0" href="/" style="font-size:1.2rem;">Mundo Pc</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav mx-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <NavLink class="nav-link px-2" href="/">Home</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link px-2" href="/productos">Productos</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link px-2" href="/Carrito">Mi Carrito</NavLink>
                </li>
            </ul>
            <form class="d-flex" role="search" onsubmit="return false;">
                <input class="form-control form-control-sm me-2"
                       type="search"
                       placeholder="Buscar"
                       aria-label="Buscar"
                       style="height:28px; font-size:0.95rem;"
                       @bind="textoBusqueda"
                       @bind:event="oninput" />
            </form>
        </div>
    </div>
</nav>
<div class="banner-home" style="width:100vw; margin:0 auto 2rem auto; text-align:center;">
    <img src="imagenes/Banner.jpeg"
         alt="Banner Promocional"
         style="width:100vw; max-width:100vw; height:auto; max-height:400px; display:block; border-radius:12px; margin:0 auto;">
</div>

<div class="container">
    <div class="row">
        <div class="col-12">
            <h2>Productos destacados</h2>
            @if (productos == null)
            {
                <div class="alert alert-info">Cargando productos...</div>
            }
            else if (productos.Count == 0)
            {
                <div class="alert alert-warning">No hay productos disponibles.</div>
            }
            else
            {
                var productosFiltrados = string.IsNullOrWhiteSpace(textoBusqueda)
                    ? productos
                    : productos.Where(p =>
                        (p.Nombre?.Contains(textoBusqueda, StringComparison.OrdinalIgnoreCase) ?? false) ||
                        (p.Descripcion?.Contains(textoBusqueda, StringComparison.OrdinalIgnoreCase) ?? false)
                    ).ToList();

                var productosPorSlide = 3;
                var totalSlides = (int)Math.Ceiling(productosFiltrados.Count / (double)productosPorSlide);
                <div id="carouselDestacados" class="carousel slide" data-bs-ride="carousel" data-bs-interval="3000">
                    <div class="carousel-inner">
                        @for (int slide = 0; slide < totalSlides; slide++)
                        {
                            <div class="carousel-item @(slide == 0 ? "active" : "")">
                                <div class="d-flex justify-content-center">
                                    @for (int j = 0; j < productosPorSlide; j++)
                                    {
                                        int index = slide * productosPorSlide + j;
                                        if (index >= productosFiltrados.Count)
                                            break;
                                        var prod = productosFiltrados[index];
                                        <div class="card h-100 mx-2" style="width: 22rem;">
                                            @if (!string.IsNullOrWhiteSpace(prod.ImagenUrl))
                                            {
                                                <img src="@prod.ImagenUrl"
                                                     class="card-img-top"
                                                     alt="@prod.Nombre"
                                                     style="max-height:180px;object-fit:contain;"
                                                     id="img-prod-@prod.Id" />
                                            }
                                            else
                                            {
                                                <div style="height:180px;display:flex;align-items:center;justify-content:center;background:#222;color:#fff;">
                                                    Sin imagen
                                                </div>
                                            }
                                            <div class="card-body d-flex flex-column">
                                                <h5 class="card-title">@prod.Nombre</h5>
                                                <p class="card-text">@prod.Descripcion</p>
                                                <p class="card-text"><b>$@prod.Precio</b></p>
                                                <button class="btn btn-primary"
                                                        @onclick="() => Comprar(prod.Id)">
                                                    Comprar
                                                </button>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselDestacados" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon"></span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselDestacados" data-bs-slide="next">
                        <span class="carousel-control-next-icon"></span>
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<Producto> productos;
    private string textoBusqueda = "";

    protected override async Task OnInitializedAsync()
    {
        productos = await ApiService.GetProductosAsync();
    }

    private void ComprarProducto(int productoId)
    {
        Console.WriteLine($"Comprar producto {productoId}");
    }

    private async Task ComprarAnimado(int productoId)
    {
        await JS.InvokeVoidAsync("flyToCart", $"#img-prod-{productoId}", "#iconoCarrito");
        ComprarProducto(productoId); // Lógica real de compra
    }

    private async Task Comprar(int productoId)
    {
        await CarritoService.AgregarOActualizarProductoAsync(productoId, 1);
        // Si quieres, puedes refrescar el carrito o mostrar un mensaje
    }
}
