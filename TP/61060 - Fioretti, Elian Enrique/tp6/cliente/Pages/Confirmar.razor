@page "/confirmar"

<title>Confirmar Compra</title>

<div class="container">
    <div class="mb-3">
        <button class="btn btn-secondary btn-volver" @onclick="VolverAlCatalogo">
            <i class="bi bi-arrow-left"></i> Volver al catálogo
        </button>
    </div>
    <h2>Confirmación de Compra</h2>
    @if (cargando)
    {
        <div class="alert alert-info">Cargando...</div>
    }
    else if (compraExitosa && comprobante != null)
    {
        <div class="mb-3 alert-success-compra">
            <h4>Compra realizada con éxito</h4>
            <p><strong>Cliente:</strong> @comprobante!.NombreCliente @comprobante!.ApellidoCliente</p>
            <p><strong>Email:</strong> @comprobante!.EmailCliente</p>
            <p><strong>Fecha:</strong> @comprobante!.Fecha.ToString("g")</p>
            <table class="table bg-carrito-confirmacion">
                <thead>
                    <tr>
                        <th>Producto</th>
                        <th>Cantidad</th>
                        <th>Precio Unitario</th>
                        <th>Importe</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in comprobante!.Items)
                    {
                        <tr>
                            <td>@ObtenerNombreProducto(item.ProductoId)</td>
                            <td>@item.Cantidad</td>
                            <td>$@item.PrecioUnitario</td>
                            <td>$@(item.Cantidad * item.PrecioUnitario)</td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="mb-3 total-compra">
                <strong>Total:</strong> $@comprobante!.Total
            </div>
            <button class="btn btn-secondary btn-volver" @onclick="VolverAlCatalogo">
                <i class="bi bi-arrow-left"></i> Volver al catálogo
            </button>
        </div>
    }
    else if (items == null || items.Count == 0)
    {
        <div class="alert alert-warning alert-warning-custom">El carrito está vacío.</div>
    }
    else
    {
        <table class="table bg-carrito">
            <thead>
                <tr>
                    <th>Producto</th>
                    <th>Cantidad</th>
                    <th>Precio Unitario</th>
                    <th>Importe</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in items)
                {
                    <tr>
                        <td>@ObtenerNombreProducto(item.ProductoId)</td>
                        <td>@item.Cantidad</td>
                        <td>$@item.PrecioUnitario</td>
                        <td>$@(item.Cantidad * item.PrecioUnitario)</td>
                    </tr>
                }
            </tbody>
        </table>
        <div cclass="mb-3 total-compra">
            <strong>Total: $@items.Sum(i => i.Cantidad * i.PrecioUnitario)</strong>
        </div>
        <EditForm Model="datos" OnValidSubmit="ConfirmarCompra">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-2 form-section">
                <label>Nombre:</label>
                <InputText class="form-control" @bind-Value="datos.NombreCliente" required />
            </div>
            <div class="mb-2 form-section">
                <label>Apellido:</label>
                <InputText class="form-control" @bind-Value="datos.ApellidoCliente" required />
            </div>
            <div class="mb-2 form-section">
                <label>Email:</label>
                <InputText class="form-control" @bind-Value="datos.EmailCliente" required />
            </div>
            <div class="d-flex gap-2 mt-3">
                <button class="btn btn-danger btn-cancelar" type="button" @onclick="CancelarCompra">
                    Cancelar compra
                </button>
                <button class="btn btn-success btn-confirmar" type="submit">
                    Confirmar compra
                </button>
            </div>
        </EditForm>
        @if (!string.IsNullOrEmpty(error))
        {
            <div class="alert alert-danger mt-2">@error</div>
        }
    }
</div>

@code {
    private List<ItemCompra> items = new();
    private List<Producto> productos = new();
    private RequisitosCompra datos = new();
    private bool cargando = true;
    private bool compraExitosa = false;
    private string? error;
    private Compra? comprobante;

    protected override async Task OnInitializedAsync()
    {
        cargando = true;
        productos = await ApiService.ObtenerProductosAsync();
        items = await ApiService.ObtenerCarritoAsync();
        cargando = false;
    }

    private string ObtenerNombreProducto(int productoId)
    {
        var producto = productos?.FirstOrDefault(p => p.Id == productoId);
        return producto?.Nombre ?? $"ID {productoId}";
    }

    private async Task ConfirmarCompra()
    {
        error = null;
        try
        {
            comprobante = await ApiService.ConfirmarCompraAsync(datos);
            compraExitosa = true;
            items = new();
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }

    private void VolverAlCatalogo()
    {
        NavigationManager.NavigateTo("/");
    }

    private async Task CancelarCompra()
    {
        await ApiService.VaciarCarritoAsync();
        NavigationManager.NavigateTo("/");
    }
}