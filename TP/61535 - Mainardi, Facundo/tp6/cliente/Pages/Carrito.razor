@page "/carrito"
@using Cliente.Modelos
@using Cliente.Services
@inject CarritoFinal CarritoFinal
@inject ApiService ApiService
@inject NavigationManager Navigation

<h1>üõí Tu Carrito</h1>

@if (productos == null)
{
    <p>Cargando productos...</p>
}
else if (!CarritoFinal.Items.Any())
{
    <p>No hay productos en el carrito.</p>
    <a class="btn btn-secondary" href="/">‚Üê Volver a la tienda</a>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Precio Unitario</th>
                <th>Cantidad</th>
                <th>Subtotal</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in CarritoFinal.Items)
            {
                var producto = productos.FirstOrDefault(p => p.Id == item.ProductoId);
                if (producto is not null)
                {
                    var subtotal = producto.Precio * item.Cantidad;
                    total += subtotal;

                    <tr>
                        <td>@producto.Nombre</td>
                        <td>$@producto.Precio</td>
                        <td>@item.Cantidad</td>
                        <td>$@subtotal</td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <h3>Total: $@total</h3>

    <button class="btn btn-danger" @onclick="VaciarCarrito">üóëÔ∏è Vaciar carrito</button>
    <button class="btn btn-success" @onclick="Comprar">üí≥ Comprar</button>
}

@code {
    private List<Producto> productos;
    private decimal total = 0;

    protected override async Task OnInitializedAsync()
    {
        productos = await ApiService.BuscarProductos(""); // trae todos
    }

    private void VaciarCarrito()
    {
        CarritoFinal.Vaciar();
        total = 0;
        Navigation.NavigateTo("/carrito", forceLoad: true);
    }

    private async void Comprar()
    {
        CarritoFinal.Vaciar();
        total = 0;
        await Task.Delay(100); // opcional
        Navigation.NavigateTo("/");
    }
}
<style>
    .header {
        position: fixed;
        top: 0;
        width: 100%;
        background-color: #5ebcff;
        box-shadow: 0 2px 4px rgba(31, 31, 34, 0.1);
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 10px 20px;
        z-index: 1000;
    }
    .logo {
        font-size: 1.5em;
        font-weight: bold;
        cursor: pointer;
    }
    .search-box {
        flex-grow: 1;
        max-width: 400px;
        margin: 0 20px;
        padding: 5px 10px;
        font-size: 1em;
    }
    .cart {
        position: relative;
        font-size: 1.5em;
        cursor: pointer;
    }

    .badge {
        position: absolute;
        top: -8px;
        right: -8px;
        background-color: red;
        color: white;
        border-radius: 50%;
        padding: 2px 6px;
        font-size: 0.8em;
    }
</style>