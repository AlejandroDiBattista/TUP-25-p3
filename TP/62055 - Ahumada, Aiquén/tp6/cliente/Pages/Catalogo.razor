@page "/catalogo"
@using cliente.Models
@using cliente.Services
@inject ApiService ApiService
@inject cliente.Services.CarritoService CarritoService
@inject NavigationManager Navigation
<div class="inicio">
<nav class="navbar navbar-expand-lg bg-body-tertiary fixed-top">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">
        <img src="img/logo2.jpeg" alt="Logo" width="100" height="55" class="d-inline-block align-text-top">
      </a>

      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>

      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="/">Inicio</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="catalogo">Productos</a>
          </li>
          <li class="nav-item">
                    <a class="nav-link d-flex align-items-center position-relative" href="carrito">
                    <span class="bi bi-cart" style="font-size: 1.3em; margin-right: 0.3em;"></span>
                    <span style="margin-right: 0.3em;">Carrito</span>
                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                       @CarritoService.Items.Sum(i => i.Cantidad)
                    </span>
                    </a>
                </li>
        </ul>
     
      </div>
    </div>
  </nav>
 </div>
<div class="contenido-con-margen">
    <h2 class="text-center my-4">Catálogo de Gorras</h2>

   <div class="d-flex justify-content-end mb-4">
    <form class="d-flex" style="max-width: 300px; width: 100%;" @onsubmit="BuscarProducto">
        <input class="form-control me-2"
               type="search"
               placeholder="Buscar"
               aria-label="Search"
               @bind="textoBusqueda"
               @oninput="OnInputBusqueda" />
        <button class="btn btn-outline-success" type="submit">Buscar</button>
    </form>
</div>

    @if (cargando)
    {
        <div class="text-center my-5">
            <div class="spinner-border text-primary" role="status"></div>
            <p>Cargando productos...</p>
        </div>
    }
    else if (productosFiltrados.Count == 0)
    {
        <p>No hay productos disponibles.</p>
    }
    else if (productosFiltrados.Count == 1)
    {
        <div class="d-flex justify-content-center">
            <div style="max-width: 350px; width: 100%;">
                <div class="card h-100 shadow-sm">
                    <img src="@productosFiltrados[0].ImagenUrl" class="card-img-top" alt="@productosFiltrados[0].Nombre" style="height: 220px; object-fit: cover;" />
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@productosFiltrados[0].Nombre</h5>
                        <p class="card-text">@productosFiltrados[0].Descripcion</p>
                        <p class="mb-1"><strong>Precio:</strong> <span class="text-success">$@productosFiltrados[0].Precio</span></p>
                        <p class="mb-2"><strong>Stock:</strong> @productosFiltrados[0].Stock</p>
                        <button class="btn btn-primary mt-auto" @onclick="() => CarritoService.Agregar(productosFiltrados[0])" disabled="@(!PuedeAgregar(productosFiltrados[0]))">
                            <i class="bi bi-cart-plus"></i> Añadir al carrito
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4">
            @foreach (var producto in productosFiltrados)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <img src="@producto.ImagenUrl" class="card-img-top" alt="@producto.Nombre" style="height: 220px; object-fit: cover;" />
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@producto.Nombre</h5>
                            <p class="card-text">@producto.Descripcion</p>
                            <p class="mb-1"><strong>Precio:</strong> <span class="text-success">$@producto.Precio</span></p>
                            <p class="mb-2"><strong>Stock:</strong> @producto.Stock</p>
                            <button class="btn btn-primary mt-auto" @onclick="() => CarritoService.Agregar(producto)" disabled="@(!PuedeAgregar(producto))">
                                <i class="bi bi-cart-plus"></i> Añadir al carrito
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<Producto> productos = new();
    private List<Producto> productosFiltrados = new();
    private string textoBusqueda = "";
    private bool cargando = true;

    protected override async Task OnInitializedAsync()
    {
        productos = await ApiService.ObtenerProductosAsync();
        productosFiltrados = productos;
        cargando = false;
        CarritoService.OnChange += StateHasChanged;
    }

    private async Task BuscarProducto()
    {
        if (string.IsNullOrWhiteSpace(textoBusqueda))
        {
            productosFiltrados = productos;
        }
        else
        {
            var texto = textoBusqueda.Trim().ToLower();
            productosFiltrados = productos
                .Where(p => p.Nombre.ToLower().Contains(texto) || p.Descripcion.ToLower().Contains(texto))
                .ToList();
        }
        await Task.CompletedTask;
    }
    private void OnInputBusqueda(ChangeEventArgs e)
{
    textoBusqueda = e.Value?.ToString() ?? "";
    if (string.IsNullOrWhiteSpace(textoBusqueda))
    {
        Navigation.NavigateTo("/catalogo", forceLoad: true);
    }
}

    public void Dispose()
    {
        CarritoService.OnChange -= StateHasChanged;
    }

    private bool PuedeAgregar(Producto p) => p.Stock > 0;
}