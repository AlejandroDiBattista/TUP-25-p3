// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Servidor.Datos;

#nullable disable

namespace servidor.Migrations
{
    [DbContext(typeof(TiendaDbContext))]
    partial class TiendaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Servidor.Modelos.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoCliente")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailCliente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("Servidor.Modelos.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCompra");
                });

            modelBuilder.Entity("Servidor.Modelos.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Base crocante con crema pastelera y frutillas frescas",
                            ImagenUrl = "https://www.recetasnestlecam.com/sites/default/files/styles/recipe_detail_mobile/public/srh_recipes/07892f02f7c57b83d5703b4ee924221e.jpg?itok=Vrlk1qve",
                            Nombre = "Tarta de Frutilla",
                            Precio = 45000.00m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Tarta de queso con base de galleta y coulis de frutos rojos",
                            ImagenUrl = "https://laopinionaustral.com.ar/media/uploads/2024/05/receta-lemon-pie.jpg",
                            Nombre = "Cheesecake",
                            Precio = 48000.00m,
                            Stock = 8
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Brownie húmedo con nueces y baño de chocolate",
                            ImagenUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSWk6QSUvVAwMUCKo4rWpU5yAuBsmfw0JwftnblS3skQIm_7cG85vIKik-wOE4OlNaS4K0&usqp=CAU",
                            Nombre = "Brownie",
                            Precio = 32000.00m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Tarta de limón con merengue italiano",
                            ImagenUrl = "https://laopinionaustral.com.ar/media/uploads/2024/05/receta-lemon-pie.jpg",
                            Nombre = "Lemon Pie",
                            Precio = 44000.00m,
                            Stock = 7
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Bizcochuelo de chocolate, crema y cerezas",
                            ImagenUrl = "https://tofuu.getjusto.com/orioneat-local/resized2/zqaT5XLQ7RAqLXsKd-2400-x.webp",
                            Nombre = "Torta Selva Negra",
                            Precio = 60000.00m,
                            Stock = 5
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Torta con crema de oreo y base de galletas",
                            ImagenUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS8QoDdXTxTbBYqfQlOBARSbi2NMifsivPdUA&s",
                            Nombre = "Torta Oreo",
                            Precio = 55000.00m,
                            Stock = 6
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Cupcake con buttercream de colores",
                            ImagenUrl = "https://storage.googleapis.com/fitia_public_images/recipes%2FGR-R-V-00001923_kh2jkptyj90wdbzs6jrjm2dn_large.jpeg",
                            Nombre = "Cupcake de Vainilla",
                            Precio = 9000.00m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Caja con 6 macarons surtidos",
                            ImagenUrl = "https://assets.tmecosys.com/image/upload/t_web_rdp_recipe_584x480/img/recipe/ras/Assets/B9FF58C7-D19C-4699-ADA6-E49760836EBB/Derivates/e1b80516-57ce-471c-bdee-eed02a742326.jpg",
                            Nombre = "Macarons",
                            Precio = 27000.00m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Relleno de dulce de leche y coco rallado",
                            ImagenUrl = "https://assets.unileversolutions.com/recipes-v3/160118-default.png",
                            Nombre = "Alfajor de Maicena",
                            Precio = 7000.00m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Bizcochuelo de zanahoria con frosting de queso",
                            ImagenUrl = "https://coosol.es/wp-content/uploads/2023/05/rebanada-pastel-zanahoria-dulce-mesa-madera-1.jpg",
                            Nombre = "Torta de Zanahoria",
                            Precio = 50000.00m,
                            Stock = 14
                        });
                });

            modelBuilder.Entity("Servidor.Modelos.ItemCompra", b =>
                {
                    b.HasOne("Servidor.Modelos.Compra", "Compra")
                        .WithMany("Items")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Servidor.Modelos.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Servidor.Modelos.Compra", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
