@page "/confirmacion"
@inject HttpClient Http
@inject NavigationManager Nav
@inject CartState CartState

<h1>Confirmación de Compra</h1>

<p>Total ítems: @totalItems</p>
<p>Importe total: @totalAmount</p>

<input placeholder="Nombre" @bind="cliente.NombreCliente" />
<input placeholder="Apellido" @bind="cliente.ApellidoCliente" />
<input placeholder="Email" @bind="cliente.EmailCliente" />
<button @onclick="Confirm">Confirmar</button>

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public int carritoId { get; set; }

    private Cliente cliente = new();
    private List<ItemCompra> items = new();
    private int totalItems;
    private decimal totalAmount;

    protected override async Task OnInitializedAsync()
    {
        items = await Http.GetFromJsonAsync<List<ItemCompra>>($"/carritos/{carritoId}") ?? new();
        totalItems = items.Sum(i => i.Cantidad);
        totalAmount = items.Sum(i => i.Cantidad * i.PrecioUnitario);
    }

    private async Task Confirm()
    {
        await Http.PutAsJsonAsync($"/carritos/{carritoId}/confirmar", cliente);
        Nav.NavigateTo("/", forceLoad: true);
        var res = await Http.PutAsJsonAsync($"/carritos/{carritoId}/confirmar", cliente);
        if (res.IsSuccessStatusCode) {
            // 1) Resetea el contador en la UI
            CartState.Items = 0;
            // 2) Vuelve al catálogo
            Nav.NavigateTo("/carrito", true);  
        }
    }
}
