@page "/Catalogo"
@using cliente.Models
@using cliente.Services
@inject ApiService apiService
@inject CarritoService carrito

<h1>Cat√°logo de camisetas retro</h1>

<input type="text" class="form-control mb-3" placeholder="Buscar..." @bind="busqueda" @bind:event="oninput" />

<div class="row">
    @foreach (var producto in productosFiltrados)
    {
        <div class="col-md-4 mb-4">
            <div class="card h-100">
                <img src="@producto.ImagenUrl" class="card-img-top" style="max-height: 200px; object-fit: contain;" />
                <div class="card-body">
                    <h5 class="card-title">@producto.Nombre</h5>
                    <p class="card-text">@producto.Descripcion</p>
                    <p class="card-text"><strong>Precio:</strong> $@producto.Precio</p>
                    <p class="card-text"><strong>Stock:</strong> @producto.Stock</p>
                    <button class=""
                            @onclick="() =>carrito.AgregarProducto(producto)"
                           disabled="@producto.Stock == 0">
                        Agregar al carrito
                    </button>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<Producto> productos = new();
    private string busqueda = "";

    protected override async Task OnInitializedAsync()
    {
        productos = await apiService.ObtenerProductosAsync();
    }

    private IEnumerable<Producto> productosFiltrados =>
        string.IsNullOrWhiteSpace(busqueda)
            ? productos
            : productos.Where(p => p.Nombre.Contains(busqueda, StringComparison.OrdinalIgnoreCase));
            
     private void AgregarAlCarrito(Producto producto)
        {
            carrito.AgregarProducto(producto);
        }
}   