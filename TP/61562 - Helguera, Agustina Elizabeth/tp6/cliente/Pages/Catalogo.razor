@page "/catalogo"
@using cliente.Models
@using cliente.Services
@inject ApiService ApiService
@inject CarritoService CarritoService


<h2 class="text-center mb-4">Cat√°logo de productos</h2>

@if (productos == null)
{
    <div class="text-center">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Cargando...</span>
        </div>
    </div>
}
else if (productos.Count == 0)
{
    <div class="alert alert-warning text-center">No hay productos disponibles.</div>
}
else
{
    <div class="row">
        @foreach (var prod in productos)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100 shadow-sm">
                    <img src="@prod.Imagen" class="card-img-top" alt="@prod.Nombre" style="height: 200px; object-fit: cover;" />
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@prod.Nombre</h5>
                        <p class="card-text">@prod.Descripcion</p>
                        <p class="fw-bold text-primary">$@prod.Precio</p>
                        <button class="btn btn-success mt-auto" @onclick="() => AgregarAlCarrito(prod)">Agregar al carrito</button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Producto> productos;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            productos = await ApiService.ObtenerProductosAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error al cargar productos: " + ex.Message);
            productos = new List<Producto>();
        }
    }

    private void AgregarAlCarrito(Producto producto)
    {
        
     CarritoService.AgregarProducto(producto);

    }
}
