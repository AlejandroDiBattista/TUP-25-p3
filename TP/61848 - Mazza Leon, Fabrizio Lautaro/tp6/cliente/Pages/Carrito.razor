@page "/carrito"
@using cliente.Models
@using cliente.Services
@inject CarritoService CarritoService
@inject ApiService ApiService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<PageTitle>Carrito de compras</PageTitle>

<div class="container">
    <h1>Carrito de Compras</h1>

    @if (CarritoService.Items.Count == 0)
    {
        <p>No hay productos en el carrito.</p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Precio</th>
                    <th>Cantidad</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in CarritoService.Items)
                {
                    <tr>
                        <td>@item.Producto.Nombre</td>
                        <td>$@item.Producto.Precio</td>
                        <td>
                            <input type="number"
                                min="1"
                                max="@item.Producto.Stock"
                                value="@item.Cantidad"
                                @onchange="(e) => CambiarCantidad(item.Producto.Id, e.Value?.ToString())"
                                class="form-control"
                                style="width: 80px;" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <p><strong>Total:</strong> $@CarritoService.CalcularTotal()</p>

        <button class="btn btn-danger" @onclick="VaciarCarrito">Vaciar carrito</button>

        <h3 class="mt-4">Confirmar compra</h3>

        <EditForm Model="formulario" OnValidSubmit="ConfirmarCompra">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label>Nombre:</label>
                <InputText class="form-control" @bind-Value="formulario.Nombre" />
            </div>
            <div class="mb-3">
                <label>Apellido:</label>
                <InputText class="form-control" @bind-Value="formulario.Apellido" />
            </div>
            <div class="mb-3">
                <label>Email:</label>
                <InputText class="form-control" @bind-Value="formulario.Email" />
            </div>

            <button type="submit" class="btn btn-success">Confirmar compra</button>
        </EditForm>
    }
</div>

@code {
    void CambiarCantidad(int productoId, string nuevaCantidadStr)
    {
        if (int.TryParse(nuevaCantidadStr, out int nuevaCantidad) && nuevaCantidad > 0)
        {
            CarritoService.CambiarCantidad(productoId, nuevaCantidad);
            StateHasChanged();
        }
    }
    private CompraFormulario formulario = new();
    public void VaciarCarrito()
    {
        CarritoService.Vaciar();
        StateHasChanged();
    }
    public async Task ConfirmarCompra()
    {

        formulario.CarritoId = CarritoService.CarritoId;

        var exito = await ApiService.ConfirmarCompraAsync(CarritoService.Items, formulario);
        
        if (exito)
        {
            await JS.InvokeVoidAsync("alert", "Compra realizada correctamente.");
            CarritoService.Vaciar();
            Navigation.NavigateTo("/");
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Error al confirmar la compra.");
        }
    }   
}