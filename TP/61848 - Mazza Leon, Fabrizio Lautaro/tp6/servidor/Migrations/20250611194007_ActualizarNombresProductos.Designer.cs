// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using servidor.Models;

#nullable disable

namespace servidor.Migrations
{
    [DbContext(typeof(TiendaContext))]
    [Migration("20250611194007_ActualizarNombresProductos")]
    partial class ActualizarNombresProductos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("servidor.Models.Carrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("servidor.Models.CarritoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarritoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CarritoItems");
                });

            modelBuilder.Entity("servidor.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoCliente")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailCliente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("servidor.Models.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCompra");
                });

            modelBuilder.Entity("servidor.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Celular Ultima Generacion",
                            ImagenUrl = "https://i5.walmartimages.com/seo/Restored-Apple-iPhone-15-Pro-Max-256GB-Unlocked-Blue-Titanium-MU693LL-A-Excellent-Condition_dd2d42c6-cc25-4bee-81ef-7847120498d5.663475b807d168a41e9082d258d9c7ce.jpeg",
                            Nombre = "Iphone 15 Pro Max",
                            Precio = 2000000m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Notebook profesional",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Notebook Pro",
                            Precio = 250000m,
                            Stock = 5
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Auriculares Bluetooth",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Auriculares",
                            Precio = 30000m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Mouse con luces RGB",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Mouse Gamer",
                            Precio = 15000m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Teclado con switches",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Teclado Mecánico",
                            Precio = 20000m,
                            Stock = 8
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Reloj inteligente",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Smartwatch",
                            Precio = 50000m,
                            Stock = 12
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Pantalla HD",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Tablet 10\"",
                            Precio = 75000m,
                            Stock = 6
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Sonido potente",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Parlante Bluetooth",
                            Precio = 18000m,
                            Stock = 18
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Carga en 30 min",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Cargador Rápido",
                            Precio = 8000m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "USB 3.0",
                            ImagenUrl = "https://via.placeholder.com/150",
                            Nombre = "Pendrive 64GB",
                            Precio = 7000m,
                            Stock = 30
                        });
                });

            modelBuilder.Entity("servidor.Models.CarritoItem", b =>
                {
                    b.HasOne("servidor.Models.Carrito", "Carrito")
                        .WithMany("Items")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("servidor.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("servidor.Models.ItemCompra", b =>
                {
                    b.HasOne("servidor.Models.Compra", "Compra")
                        .WithMany("Items")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("servidor.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("servidor.Models.Carrito", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("servidor.Models.Compra", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
