// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using servidor.Models;

#nullable disable

namespace servidor.Migrations
{
    [DbContext(typeof(TiendaContext))]
    [Migration("20250611203927_ActualizarDatosProductos")]
    partial class ActualizarDatosProductos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("servidor.Models.Carrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("servidor.Models.CarritoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarritoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CarritoItems");
                });

            modelBuilder.Entity("servidor.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoCliente")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailCliente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("servidor.Models.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCompra");
                });

            modelBuilder.Entity("servidor.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Celular Ultima Generacion",
                            ImagenUrl = "https://i5.walmartimages.com/seo/Restored-Apple-iPhone-15-Pro-Max-256GB-Unlocked-Blue-Titanium-MU693LL-A-Excellent-Condition_dd2d42c6-cc25-4bee-81ef-7847120498d5.663475b807d168a41e9082d258d9c7ce.jpeg",
                            Nombre = "Iphone 15 Pro Max",
                            Precio = 2000000m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Notebook Profesional y Gaming",
                            ImagenUrl = "https://acdn-us.mitiendanube.com/stores/001/156/703/products/notebook-gamer-asus-rog-strix-g17-g713pv-ws94-17-ryzen-9-7845hx-1tb-ssd-16gb-rtx-4060-copia-4a3f8882e47fbcca8317314309110054-1024-1024.png",
                            Nombre = "Notebook Gamer ASUS Rog Strix G17",
                            Precio = 3465000m,
                            Stock = 5
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Auriculares para Audio Profesional",
                            ImagenUrl = "https://m.media-amazon.com/images/I/71BR7ivLOAL.jpg",
                            Nombre = "Audio Technica ATH-M50X",
                            Precio = 300000m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Mouse con luces RGB",
                            ImagenUrl = "https://spacegamer.com.ar/img/Public/1058-producto-203bb-8934.jpg",
                            Nombre = "Logitech G203",
                            Precio = 15000m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Teclado con switches mecánicos",
                            ImagenUrl = "https://www.newmaster.com.ar/wp-content/uploads/2021/08/1-1.jpg",
                            Nombre = "HyperX Alloy Origins",
                            Precio = 135000m,
                            Stock = 8
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Reloj inteligente",
                            ImagenUrl = "https://acdn-us.mitiendanube.com/stores/001/097/819/products/apple-watch-serie-se-44mm1-ef69a751ed99e1572d16758829200917-1024-1024.png",
                            Nombre = "Apple Watch SE",
                            Precio = 620000m,
                            Stock = 12
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Pantalla HD",
                            ImagenUrl = "https://http2.mlstatic.com/D_NQ_NP_927502-MLU75081110091_032024-O.webp",
                            Nombre = "Samgung Galaxy Tab A9",
                            Precio = 235000m,
                            Stock = 6
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Sonido potente",
                            ImagenUrl = "https://www.oscarbarbieri.com/pub/media/catalog/product/cache/7baadf0dec41407c7702efdbff940ecb/4/4/44a9f81c092a58e6af72a2b902f8c330.jpg",
                            Nombre = "Parlante JBL Go",
                            Precio = 60000m,
                            Stock = 18
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Disco super rápido",
                            ImagenUrl = "https://compucordoba.com.ar/img/Public/1078-producto-d-nq-np-699067-mla31583397158-072019-o1-614.jpg",
                            Nombre = "Disco SSD WD Green 480 GB",
                            Precio = 29000m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "USB 3.1",
                            ImagenUrl = "https://www.torca.com.ar/images/00000000000622444173364.jpg",
                            Nombre = "Pendrive Kingston 64GB",
                            Precio = 9000m,
                            Stock = 30
                        });
                });

            modelBuilder.Entity("servidor.Models.CarritoItem", b =>
                {
                    b.HasOne("servidor.Models.Carrito", "Carrito")
                        .WithMany("Items")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("servidor.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("servidor.Models.ItemCompra", b =>
                {
                    b.HasOne("servidor.Models.Compra", "Compra")
                        .WithMany("Items")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("servidor.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("servidor.Models.Carrito", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("servidor.Models.Compra", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
