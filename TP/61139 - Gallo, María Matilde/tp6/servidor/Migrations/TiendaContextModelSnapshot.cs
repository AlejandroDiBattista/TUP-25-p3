// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Servidor.Data;

#nullable disable

namespace servidor.Migrations
{
    [DbContext(typeof(TiendaContext))]
    partial class TiendaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Servidor.Models.Carrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("Servidor.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoCliente")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailCliente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("Servidor.Models.ItemCarrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarritoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCarrito");
                });

            modelBuilder.Entity("Servidor.Models.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Servidor.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Diseño rosa con verde. Plataforma triple y gamuza supersuave para un estilo clásico renovado.",
                            ImagenUrl = "zapa1.jpg.webp",
                            Nombre = "Zapatillas Adidas Gazelle Bold",
                            Precio = 150000m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Verde y rosa vibrantes. Las adidas London Green Pink están inspiradas en la colaboración Gucci x Gazelle.",
                            ImagenUrl = "zapa2.jpg.webp",
                            Nombre = "Zapatillas Adidas London",
                            Precio = 250000m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Modelo clásico de los 80. Rosa vibrante con esencia futbolera británica.",
                            ImagenUrl = "zapa3.jpg.webp",
                            Nombre = "Zapatillas Puma Palermo",
                            Precio = 185000m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Comodidad y estilo para correr con tecnología Air Max.",
                            ImagenUrl = "zapa4.jpg.webp",
                            Nombre = "Zapatillas Nike Air Max",
                            Precio = 200000m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Diseño retro con comodidad moderna.",
                            ImagenUrl = "zapa5.jpg.webp",
                            Nombre = "Zapatillas DC Pink Breeze",
                            Precio = 180000m,
                            Stock = 35
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Estilo clásico y comodidad todo el día.",
                            ImagenUrl = "zapa6.jpg.webp",
                            Nombre = "Zapatillas New Balance 574",
                            Precio = 220000m,
                            Stock = 45
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Perfectas para correr largas distancias con soporte extra.",
                            ImagenUrl = "zapa7.jpg.webp",
                            Nombre = "Zapatillas Nike Dunk Low",
                            Precio = 270000m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Clásicas y atemporales, con estilo urbano.",
                            ImagenUrl = "zapa8.jpg.webp",
                            Nombre = "Zapatillas Converse Chuck Taylor",
                            Precio = 140000m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Diseño icónico para uso casual y skateboarding.",
                            ImagenUrl = "zapa9.jpg.webp",
                            Nombre = "Zapatillas Vans Old Skool",
                            Precio = 160000m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Comodidad y estilo para uso diario y entrenamiento.",
                            ImagenUrl = "zapa10.jpg.jpg",
                            Nombre = "Zapatillas Saucony Jazz",
                            Precio = 190000m,
                            Stock = 30
                        });
                });

            modelBuilder.Entity("Servidor.Models.ItemCarrito", b =>
                {
                    b.HasOne("Servidor.Models.Carrito", "Carrito")
                        .WithMany("Items")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Servidor.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Servidor.Models.ItemCompra", b =>
                {
                    b.HasOne("Servidor.Models.Compra", "Compra")
                        .WithMany("Items")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Servidor.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Servidor.Models.Carrito", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Servidor.Models.Compra", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
