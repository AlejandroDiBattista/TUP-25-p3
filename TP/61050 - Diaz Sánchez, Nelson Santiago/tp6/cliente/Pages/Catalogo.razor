@page "/catalogo"
@inject cliente.Services.ApiService ApiService
@inject cliente.Services.CarritoService CarritoService
@using cliente.Models
<h1>Cat√°logo de productos</h1>
<a href="./Carrito">probar</a>
@if (productos == null)
{
    <p>Cargando productos...</p>
}
else if (productos.Count == 0)
{
    <p>No se encontraron productos.</p>
}
else
{
    <div class="row">
        @foreach (var producto in productos)
        {
            <div class="col-md-4 mb-3">
                <div class="card">
                    <img src="@producto.Imagen" class="card-img-top" alt="@producto.Nombre" />
                    <div class="card-body">
                        <h5 class="card-title">@producto.Nombre</h5>
                        <p class="card-text">@producto.Descripcion</p>
                        <p><strong>Precio:</strong> $@producto.Precio</p>
                        <p><strong>Stock:</strong> @producto.Cantidad</p>
                        <button class="btn btn-primary" @onclick="@(() => AgregarAlCarrito(producto.Id))">Agregar al carrito</button>
                    </div>
                </div>
            </div>
        }
    </div>
}


@code {
    
    private List<Producto> productos;

    protected override async Task OnInitializedAsync()
    {
        productos = await ApiService.ObtenerProductosAsync();
    }

    private void AgregarAlCarrito(int productoId)
    {
    var producto = productos.FirstOrDefault(p => p.Id == productoId);
    if (producto != null)
    {
        CarritoService.AgregarProducto(producto);
    }
    }
}