// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using servidor.Data;

#nullable disable

namespace servidor.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250607200811_NuevaBase")]
    partial class NuevaBase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("servidor.Entidades.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<double>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("servidor.Entidades.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("REAL");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCompra");
                });

            modelBuilder.Entity("servidor.Entidades.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imagen")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 10,
                            Descripcion = "Heladera con freezer",
                            Imagen = "heladera.jpg",
                            Nombre = "Heladera",
                            Precio = 150000.0
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 8,
                            Descripcion = "Lavarropas automático carga frontal",
                            Imagen = "lavarropas.jpg",
                            Nombre = "Lavarropas",
                            Precio = 120000.0
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 15,
                            Descripcion = "Microondas digital 20L",
                            Imagen = "microondas.jpg",
                            Nombre = "Microondas",
                            Precio = 45000.0
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 6,
                            Descripcion = "Aire acondicionado split frío/calor",
                            Imagen = "aire.jpg",
                            Nombre = "Aire Acondicionado",
                            Precio = 180000.0
                        },
                        new
                        {
                            Id = 5,
                            Cantidad = 12,
                            Descripcion = "Horno eléctrico 45 litros",
                            Imagen = "horno.jpg",
                            Nombre = "Horno eléctrico",
                            Precio = 60000.0
                        },
                        new
                        {
                            Id = 6,
                            Cantidad = 20,
                            Descripcion = "Batidora de mano 5 velocidades",
                            Imagen = "batidora.jpg",
                            Nombre = "Batidora",
                            Precio = 20000.0
                        },
                        new
                        {
                            Id = 7,
                            Cantidad = 18,
                            Descripcion = "Licuadora de vaso 1.5L",
                            Imagen = "licuadora.jpg",
                            Nombre = "Licuadora",
                            Precio = 25000.0
                        },
                        new
                        {
                            Id = 8,
                            Cantidad = 14,
                            Descripcion = "Cafetera eléctrica 12 tazas",
                            Imagen = "cafetera.jpg",
                            Nombre = "Cafetera",
                            Precio = 30000.0
                        },
                        new
                        {
                            Id = 9,
                            Cantidad = 25,
                            Descripcion = "Plancha a vapor con suela antiadherente",
                            Imagen = "plancha.jpg",
                            Nombre = "Plancha",
                            Precio = 18000.0
                        },
                        new
                        {
                            Id = 10,
                            Cantidad = 22,
                            Descripcion = "Tostadora 2 rebanadas con regulador",
                            Imagen = "tostadora.jpg",
                            Nombre = "Tostadora",
                            Precio = 15000.0
                        });
                });

            modelBuilder.Entity("servidor.Entidades.ItemCompra", b =>
                {
                    b.HasOne("servidor.Entidades.Compra", null)
                        .WithMany("Items")
                        .HasForeignKey("CompraId");

                    b.HasOne("servidor.Entidades.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("servidor.Entidades.Compra", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
