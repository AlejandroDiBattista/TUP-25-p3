// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using servidor.Data;

#nullable disable

namespace servidor.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("servidor.Entidades.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoCliente")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailCliente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("TEXT");

                    b.Property<double>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("servidor.Entidades.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("REAL");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCompra");
                });

            modelBuilder.Entity("servidor.Entidades.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imagen")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 10,
                            Descripcion = "Heladera con freezer",
                            Imagen = "https://assets.hotsale.com.ar/uploads/offers/465371/680fe0b634761.jpg?w=500&h=375",
                            Nombre = "Heladera",
                            Precio = 150000.0
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 8,
                            Descripcion = "Lavarropas automático carga frontal",
                            Imagen = "https://authogar.vtexassets.com/arquivos/ids/198954-500-auto?v=638767894197430000&width=500&height=auto&aspect=true",
                            Nombre = "Lavarropas",
                            Precio = 120000.0
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 15,
                            Descripcion = "Microondas digital 20L",
                            Imagen = "https://thumbs.dreamstime.com/b/abra-el-horno-de-microondas-84772112.jpg",
                            Nombre = "Microondas",
                            Precio = 45000.0
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 6,
                            Descripcion = "Aire acondicionado split frío/calor",
                            Imagen = "https://static.vecteezy.com/system/resources/thumbnails/026/484/369/small/white-air-conditioner-and-remote-isolated-on-white-wall-background-cooling-product-for-in-summer-clipping-path-free-photo.jpg",
                            Nombre = "Aire Acondicionado",
                            Precio = 180000.0
                        },
                        new
                        {
                            Id = 5,
                            Cantidad = 12,
                            Descripcion = "Horno eléctrico 45 litros",
                            Imagen = "https://http2.mlstatic.com/D_Q_NP_2X_697835-MLU74245658329_012024-E.webp",
                            Nombre = "Horno eléctrico",
                            Precio = 60000.0
                        },
                        new
                        {
                            Id = 6,
                            Cantidad = 20,
                            Descripcion = "Batidora de mano 5 velocidades",
                            Imagen = "https://http2.mlstatic.com/D_Q_NP_2X_978238-MLU72674744248_112023-V.webp",
                            Nombre = "Batidora",
                            Precio = 20000.0
                        },
                        new
                        {
                            Id = 7,
                            Cantidad = 18,
                            Descripcion = "Licuadora de vaso 1.5L",
                            Imagen = "https://img.freepik.com/fotos-premium/licuadora-electrica_909293-2672.jpg?semt=ais_hybrid&w=740",
                            Nombre = "Licuadora",
                            Precio = 25000.0
                        },
                        new
                        {
                            Id = 8,
                            Cantidad = 14,
                            Descripcion = "Cafetera eléctrica 12 tazas",
                            Imagen = "https://http2.mlstatic.com/D_Q_NP_2X_956659-MLA83391699886_042025-V.webp",
                            Nombre = "Cafetera",
                            Precio = 30000.0
                        },
                        new
                        {
                            Id = 9,
                            Cantidad = 25,
                            Descripcion = "Plancha a vapor con suela antiadherente",
                            Imagen = "https://http2.mlstatic.com/D_Q_NP_2X_889265-MLA84235372773_042025-V.webp",
                            Nombre = "Plancha",
                            Precio = 18000.0
                        },
                        new
                        {
                            Id = 10,
                            Cantidad = 22,
                            Descripcion = "Tostadora 2 rebanadas con regulador",
                            Imagen = "https://http2.mlstatic.com/D_Q_NP_2X_957292-MLA52160650303_102022-V.webp",
                            Nombre = "Tostadora",
                            Precio = 15000.0
                        });
                });

            modelBuilder.Entity("servidor.Entidades.ItemCompra", b =>
                {
                    b.HasOne("servidor.Entidades.Compra", "Compra")
                        .WithMany("Items")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("servidor.Entidades.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("servidor.Entidades.Compra", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
