@page "/"
@inject NavigationManager NavigationManager
@inject ApiService ApiService


<h1>Catálogo de productos</h1>
<div class="input-group mb-3">
  <input class="form-control" @bind="searchTerm" placeholder="Buscar productos..." />
  <button class="btn btn-primary" @onclick="OnSearch">Buscar</button>
</div>

@if (productos is null)
{
  <div class="text-center"><span class="spinner-border"></span></div>
}
else if (!productos.Any())
{
  <div class="alert alert-info">No se encontraron productos.</div>
}
else
{
  <div class="row">
    @foreach (var p in productos)
    {
      <div class="col-md-4 mb-3">
        <div class="card">
          <img src="@p.ImagenUrl" class="card-img-top" alt="@p.Nombre" />
          <div class="card-body">
            <h5 class="card-title">@p.Nombre</h5>
            <p class="card-text">@p.Descripcion</p>
            <p><strong>Precio:</strong> @p.Precio.ToString("N2") ¤</p>
            <p><strong>Stock:</strong> @p.Stock</p>
            <button class="btn btn-success w-100" @onclick="() => AddToCart(p.Id)">Agregar al Carrito</button>
          </div>
        </div>
      </div>
    }
  </div>
}

@code {
  private string searchTerm = "";
  private List<Producto> productos = new();

  protected override async Task OnInitializedAsync()
  {
    NavigationManager.LocationChanged += OnLocationChanged;
    await LoadProductosAsync();
  }

  private async void OnLocationChanged(object sender, LocationChangedEventArgs e)
  {
    await LoadProductosAsync();
    StateHasChanged();
  }

  private async Task LoadProductosAsync()
  {
    // Manual query-string parsing
    var uri = new Uri(NavigationManager.Uri);
    var query = uri.Query; // e.g. "?search=term"
    if (!string.IsNullOrEmpty(query))
    {
      var parts = query.TrimStart('?').Split('&', StringSplitOptions.RemoveEmptyEntries);
      foreach (var p in parts)
      {
        var kv = p.Split('=', 2);
        if (kv.Length == 2 && kv[0] == "search")
        {
          searchTerm = Uri.UnescapeDataString(kv[1]);
          break;
        }
      }
    }
    else
    {
      searchTerm = string.Empty;
    }

    var result = await ApiService.GetProductosAsync(
      string.IsNullOrWhiteSpace(searchTerm) ? null : searchTerm);
    productos = result?.ToList() ?? new List<Producto>();
  }

  private void OnSearch()
    => NavigationManager.NavigateTo($"/?search={Uri.EscapeDataString(searchTerm)}");

  private void AddToCart(int id)
    => NavigationManager.NavigateTo($"/carrito?add={id}");

  public void Dispose()
    => NavigationManager.LocationChanged -= OnLocationChanged;
}
