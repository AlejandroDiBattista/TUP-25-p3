// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using servidor;

#nullable disable

namespace servidor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250613181958_ActualizacionCarritoDB")]
    partial class ActualizacionCarritoDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("servidor.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoCliente")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailCliente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("servidor.Models.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCompra");
                });

            modelBuilder.Entity("servidor.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Televisor de 50 pulgadas con resolución 4K y HDR.",
                            ImagenUrl = "images/tv.jpg",
                            Nombre = "Smart TV 4K",
                            Precio = 450000m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Teléfono de última generación.",
                            ImagenUrl = "images/telefono.jpg",
                            Nombre = "Iphone 16 Pro Max",
                            Precio = 300000m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Auriculares inalámbricos con cancelación de ruido activa.",
                            ImagenUrl = "images/auriculares.jpg",
                            Nombre = "Auriculares JBL",
                            Precio = 50000m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Teclado gaming con switches Cherry MX y retroiluminación RGB personalizable.",
                            ImagenUrl = "images/teclado.jpg",
                            Nombre = "Teclado Mecánico RGB",
                            Precio = 75000m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Mouse con sensor óptico de alta precisión y batería de larga duración.",
                            ImagenUrl = "images/mouse.jpg",
                            Nombre = "Mouse Gamer Logitech",
                            Precio = 30000m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Monitor QHD con tasa de refresco de 144Hz y panel VA curvo.",
                            ImagenUrl = "images/monitor.jpg",
                            Nombre = "Monitor Curvo 27''",
                            Precio = 200000m,
                            Stock = 8
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Cámara web con micrófono integrado, ideal para videollamadas y streaming.",
                            ImagenUrl = "images/camara.jpg",
                            Nombre = "Camara Full HD",
                            Precio = 25000m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Unidad de estado sólido NVMe PCIe Gen4 para almacenamiento ultrarrápido.",
                            ImagenUrl = "images/ssd.jpg",
                            Nombre = "Disco SSD 1TB",
                            Precio = 90000m,
                            Stock = 12
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Router de doble banda con tecnología Wi-Fi 6 para conexiones ultrarrápidas y estables.",
                            ImagenUrl = "images/router.jpg",
                            Nombre = "Router Wi-Fi ",
                            Precio = 60000m,
                            Stock = 18
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Impresora, escáner y copiadora con conectividad Wi-Fi y impresión a doble cara.",
                            ImagenUrl = "images/impresora.jpg",
                            Nombre = "Impresora Multifunción",
                            Precio = 110000m,
                            Stock = 7
                        });
                });

            modelBuilder.Entity("servidor.Models.ItemCompra", b =>
                {
                    b.HasOne("servidor.Models.Compra", "Compra")
                        .WithMany("ItemsCompra")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("servidor.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("servidor.Models.Compra", b =>
                {
                    b.Navigation("ItemsCompra");
                });
#pragma warning restore 612, 618
        }
    }
}
