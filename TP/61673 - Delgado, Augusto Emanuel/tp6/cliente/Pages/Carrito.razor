@page "/carrito"
@using cliente.Models
@inject cliente.Services.CarritoService CarritoService

<PageTitle>Tu Carrito de Compras</PageTitle>

<h3>Tu Carrito de Compras</h3>

@if (CarritoService.Items.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Producto</th>
                <th>Precio Unitario</th>
                <th>Cantidad</th>
                <th>Subtotal</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in CarritoService.Items)
            {
                <tr>
                    <td>
                        <img src="@item.Producto.ImagenUrl" alt="@item.Producto.Nombre" style="width: 50px; height: 50px; object-fit: cover; margin-right: 10px;">
                        @item.Producto.Nombre
                    </td>
                    <td>$@item.Producto.Precio</td>
                    <td>
                        <input type="number" @bind-value="item.Cantidad"
                               @bind-value:event="oninput"
                               min="1" max="@item.Producto.Stock"
                               @onchange="() => ActualizarCantidad(item)"
                               class="form-control" style="width: 80px;">
                    </td>
                    <td>$@(item.Producto.Precio * item.Cantidad)</td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="() => EliminarItem(item.Producto.Id)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="3" class="text-end"><strong>Total:</strong></td>
                <td><strong>$@CarritoService.TotalCarrito</strong></td>
                <td></td>
            </tr>
        </tfoot>
    </table>

    <div class="d-grid gap-2">
        <button class="btn btn-success btn-lg">Proceder al Pago</button>
        <button class="btn btn-outline-secondary" @onclick="VaciarCarrito">Vaciar Carrito</button>
    </div>
}
else
{
    <p>Tu carrito está vacío. ¡Empieza a agregar productos de nuestro <a href="/">catálogo</a>!</p>
}

@code {   

    protected override void OnInitialized()
    {
        CarritoService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CarritoService.OnChange -= StateHasChanged;
    }

    private void ActualizarCantidad(CarritoItem item)
    {
        if (item.Cantidad < 1)
        {
            item.Cantidad = 1;
        }
        if (item.Cantidad > item.Producto.Stock)
        {
            item.Cantidad = item.Producto.Stock;
        }

        if (item.Cantidad == 0)
        {
            CarritoService.RemoverDelCarrito(item.Producto.Id);
        }
        else
        {
            CarritoService.AgregarOActualizarEnCarrito(item.Producto);
        }
    }

    private void EliminarItem(int productoId)
    {
        CarritoService.RemoverDelCarrito(productoId);
    }

    private void VaciarCarrito()
    {
        CarritoService.VaciarCarrito();
    }
}