@using cliente.Services
@inherits LayoutView
@inject ApiService ApiService
@inject NavigationManager Navigation
@implements IDisposable

<div class="page">
    <header class="header-fixed">
        <nav class="navbar">
            <div class="nav-brand" @onclick="IrAHome">
                <span class="logo">🛒 TiendaTech</span>
            </div>
            
            <div class="nav-search">
                <input type="text" @bind="terminoBusqueda" @onkeypress="OnBusquedaKeyPress" 
                       placeholder="Buscar productos..." class="search-input" />
                <button @onclick="RealizarBusqueda" class="search-btn">🔍</button>
            </div>
            
            <div class="nav-cart" @onclick="IrACarrito">
                <span class="cart-icon">🛒</span>
                @if (cantidadItems > 0)
                {
                    <span class="cart-badge">@cantidadItems</span>
                }
            </div>
        </nav>
    </header>

    <main class="main-content">
        @Body
    </main>
</div>

<style>
    .page {
        min-height: 100vh;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .header-fixed {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        z-index: 1000;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .navbar {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 1rem 2rem;
        max-width: 1200px;
        margin: 0 auto;
    }

    .nav-brand {
        cursor: pointer;
        transition: transform 0.2s ease;
    }

    .nav-brand:hover {
        transform: scale(1.05);
    }

    .logo {
        font-size: 1.5rem;
        font-weight: bold;
        background: linear-gradient(45deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .nav-search {
        display: flex;
        align-items: center;
        background: rgba(255, 255, 255, 0.9);
        border-radius: 25px;
        padding: 0.5rem;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

    .nav-search:focus-within {
        transform: scale(1.02);
        box-shadow: 0 4px 20px rgba(102, 126, 234, 0.3);
    }

    .search-input {
        border: none;
        outline: none;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        width: 300px;
        background: transparent;
        font-size: 1rem;
    }

    .search-btn {
        background: linear-gradient(45deg, #667eea, #764ba2);
        border: none;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        color: white;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
    }

    .search-btn:hover {
        transform: scale(1.1);
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
    }

    .nav-cart {
        position: relative;
        cursor: pointer;
        padding: 0.5rem;
        border-radius: 50%;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.9);
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .nav-cart:hover {
        transform: scale(1.1);
        background: linear-gradient(45deg, #667eea, #764ba2);
        color: white;
    }

    .cart-icon {
        font-size: 1.5rem;
    }

    .cart-badge {
        position: absolute;
        top: -5px;
        right: -5px;
        background: #ff4757;
        color: white;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.8rem;
        font-weight: bold;
        animation: pulse 2s infinite;
    }

    @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.1); }
        100% { transform: scale(1); }
    }

    .main-content {
        padding-top: 100px;
        min-height: calc(100vh - 100px);
    }

    @media (max-width: 768px) {
        .navbar {
            flex-direction: column;
            gap: 1rem;
            padding: 1rem;
        }

        .search-input {
            width: 200px;
        }

        .main-content {
            padding-top: 140px;
        }
    }
</style>

@code {
    private string terminoBusqueda = "";
    private int cantidadItems = 0;

    protected override async Task OnInitializedAsync()
    {
        ApiService.OnCarritoActualizado += ActualizarContadorCarrito;
        await ActualizarContadorCarrito();
    }

    private async Task ActualizarContadorCarrito()
    {
        cantidadItems = await ApiService.ObtenerCantidadItemsAsync();
        StateHasChanged();
    }

    private void IrAHome()
    {
        Navigation.NavigateTo("/");
    }

    private void IrACarrito()
    {
        Navigation.NavigateTo("/carrito");
    }

    private void RealizarBusqueda()
    {
        if (!string.IsNullOrWhiteSpace(terminoBusqueda))
        {
            Navigation.NavigateTo($"/?query={Uri.EscapeDataString(terminoBusqueda)}");
        }
        else
        {
            Navigation.NavigateTo("/");
        }
    }

    private async Task OnBusquedaKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            RealizarBusqueda();
        }
    }

    public void Dispose()
    {
        ApiService.OnCarritoActualizado -= ActualizarContadorCarrito;
    }
}