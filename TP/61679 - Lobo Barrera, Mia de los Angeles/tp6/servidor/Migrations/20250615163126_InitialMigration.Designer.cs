// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using servidor.Data;

#nullable disable

namespace servidor.Migrations
{
    [DbContext(typeof(TiendaDbContext))]
    [Migration("20250615163126_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("servidor.Modelos.Carrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("servidor.Modelos.CarritoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarritoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CarritoItems");
                });

            modelBuilder.Entity("servidor.Modelos.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoCliente")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailCliente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("servidor.Modelos.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCompra");
                });

            modelBuilder.Entity("servidor.Modelos.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Toma una prenda esencial y dale el auténtico toque de carreras. Ninguna pieza de ropa te va acompañar tan lejos como esta.",
                            ImagenUrl = "img/ferrari.png",
                            Nombre = "Camiseta Scuderia Ferrari F1 2025 rojo",
                            Precio = 102.50m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "El favorito que funciona en cualquier situación.",
                            ImagenUrl = "img/hass.png",
                            Nombre = "Camiseta Hass F1 Moneygram 2025",
                            Precio = 94m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "El estilo de tu equipo favorito de carreras.",
                            ImagenUrl = "img/kicksauber.png",
                            Nombre = "Gorra Team Nico Hulkenberg Stake Sauber F1 2025",
                            Precio = 59m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "El favorito que siempre funciona en cualquier situación, con el estilo de un verdadero profesional.",
                            ImagenUrl = "img/mclaren.png",
                            Nombre = "Camiseta Piloto McLaren Oscar Piastri F1 2025",
                            Precio = 104m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "El favorito que siempre funciona en cualquier situación, con el estilo de un verdadero profesional.",
                            ImagenUrl = "img/redbullracing.png.avif",
                            Nombre = "Camiseta Piloto Red Bull Racing Max Verstappen F1 2025",
                            Precio = 104m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Un favorito que siempre funciona en cualquier situación.",
                            ImagenUrl = "img/vcarb.png",
                            Nombre = "Camiseta Piloto VCARB Hugo F1 2025",
                            Precio = 116m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "El favorito de todos, porque siempre funciona en cualquier situación.",
                            ImagenUrl = "img/williams.png",
                            Nombre = "Camiseta Williams Racing F1 2025",
                            Precio = 85.50m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Toma una prenda esencial y dale el auténtico toque de carreras.",
                            ImagenUrl = "img/mercedes.png",
                            Nombre = "Camiseta Piloto Mercedes F1 2025",
                            Precio = 110m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "El favorito de todos, siempre funciona en cualquier situación.",
                            ImagenUrl = "img/alpine.png",
                            Nombre = "Camiseta Piloto Alpine F1 2025",
                            Precio = 90m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "El favorito de todos, que te da un auténtico toque de profesional.",
                            ImagenUrl = "img/astonmartin.png",
                            Nombre = "Camiseta Piloto Aston Martin F1 2025 Fernando Alonso",
                            Precio = 99m,
                            Stock = 100
                        });
                });

            modelBuilder.Entity("servidor.Modelos.CarritoItem", b =>
                {
                    b.HasOne("servidor.Modelos.Carrito", null)
                        .WithMany("Items")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("servidor.Modelos.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("servidor.Modelos.ItemCompra", b =>
                {
                    b.HasOne("servidor.Modelos.Compra", "Compra")
                        .WithMany("Items")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("servidor.Modelos.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("servidor.Modelos.Carrito", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("servidor.Modelos.Compra", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
