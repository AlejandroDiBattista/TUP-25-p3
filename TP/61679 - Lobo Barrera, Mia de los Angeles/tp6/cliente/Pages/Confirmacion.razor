@page "/confirmacion"
@using System.Net.Http.Json
@using cliente.Modelos
@using cliente.Services
@inject HttpClient Http
@inject NavigationManager Navigation
@inject CarritoService CarritoService

<h1>Confirmación de Compra</h1>

@if (compra == null)
{
    <p>Cargando información...</p>
}
else
{
    <div>
        <p><strong>Total de Ítems:</strong> @compra.Items.Sum(i => i.Cantidad)</p>
        <p><strong>Importe Total:</strong> $@compra.Total</p>
    </div>

    <EditForm Model="compra" OnValidSubmit="OnConfirmar">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group mb-3">
            <label>Nombre</label>
            <InputText @bind-Value="compra.NombreCliente" class="form-control" />
        </div>
        <div class="form-group mb-3">
            <label>Apellido</label>
            <InputText @bind-Value="compra.ApellidoCliente" class="form-control" />
        </div>
        <div class="form-group mb-3">
            <label>Email</label>
            <InputText @bind-Value="compra.EmailCliente" type="email" class="form-control" />
        </div>

        <button type="submit" class="btn btn-success">Confirmar Compra</button>
    </EditForm>
}

@code {
    private Compra compra;
    private int? carritoId;

    protected override async Task OnInitializedAsync()
    {
        carritoId = CarritoService.ObtenerCarritoIdActual();

        if (carritoId == null)
        {
            Navigation.NavigateTo("/");
            return;
        }

        var response = await Http.GetAsync($"http://localhost:5184/carritos/{carritoId}");
        if (!response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/");
            return;
        }

        var carrito = await response.Content.ReadFromJsonAsync<CarritoModel>();
        if (carrito == null || !carrito.Items.Any())
        {
            Navigation.NavigateTo("/");
            return;
        }

        compra = new Compra
        {
            Items = carrito.Items.Select(i => new ItemCompra
            {
                ProductoId = i.Producto.Id,
                Cantidad = i.Cantidad,
                PrecioUnitario = i.Producto.Precio,
                Productos = i.Producto
            }).ToList(),
            Total = carrito.Items.Sum(i => i.Cantidad * i.Producto.Precio),
            Fecha = DateTime.Now
        };
    }

    private async Task OnConfirmar()
    {
        var response = await Http.PutAsJsonAsync($"http://localhost:5184/carritos/{carritoId}/confirmar", compra);

        if (response.IsSuccessStatusCode)
        {
            CarritoService.ReiniciarCarrito();
            Navigation.NavigateTo("/");
        }
        else
        {
            var error = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Error al confirmar compra: {error}");
        }
    }
}