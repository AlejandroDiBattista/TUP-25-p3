@page "/"
@using cliente.Modelos
@inject HttpClient Http

<h1 class="text-center mb-4">Cat√°logo de Productos</h1>

<div class="mb-3">
    <input @bind="searchQuery" placeholder="Buscar producto..." />
    <button @onclick="Buscar">Buscar</button>
</div>

<div class="productos-grid d-flex flex-wrap">
    @if (productos is null)
    {
        <p>Cargando productos...</p>
    }
    else if (!productos.Any())
    {
        <p>No se encontraron productos.</p>
    }
    else
    {
        foreach (var producto in productos)
        {
            <TarjetaProducto Producto="producto" OnProductoAgregado="CargarProductos" />
        }
    }
</div>

@code {
    private string searchQuery = string.Empty;
    private List<Producto> productos;

    protected override async Task OnInitializedAsync()
    {
        await CargarProductos();
    }
    
    private async Task CargarProductos()
    {
        try
        {
            productos = await Http.GetFromJsonAsync<List<Producto>>("http://localhost:5184/productos");
            Console.WriteLine($"Productos cargados: {productos.Count}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error cargando productos: {ex.Message}");
        }
    }
    private async Task Buscar()
    {
        string url = string.IsNullOrWhiteSpace(searchQuery)
            ? "http://localhost:5184/productos"
            : $"http://localhost:5184/productos?query={searchQuery}";

        productos = await Http.GetFromJsonAsync<List<Producto>>(url);
    }
}