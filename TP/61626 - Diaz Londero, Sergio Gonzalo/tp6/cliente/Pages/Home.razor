@page "/"
 @using cliente.Services
 @inject ApiService ApiService
 @inject CarritoService CarritoService


 <PageTitle>Inicio</PageTitle>
 
 <div class="container">
  <nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">NextGen</a>
      <button
        class="navbar-toggler"
        type="button"
        data-bs-toggle="collapse"
        data-bs-target="#navbarSupportedContent"
        aria-controls="navbarSupportedContent"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="#">Home</a>
          </li>
        </ul>
        <form class="d-flex" role="search">
          <input
            class="form-control me-2"
            type="search"
            placeholder="Buscar"
            aria-label="Search"
          />
          <button class="btn btn-outline-primary" type="submit">Buscar</button>
         
          <a class="btn btn-outline-primary ms-5" href="/carrito">Carrito</a>

         

        </form>
      </div>
    </div>
  </nav>

  <div class="row my-4 row-gap-4">
    @if (productos.Count == 0 && !cargando)
    {
      <p>No hay productos cargados. Presiona el botón para cargar productos.</p>
    }
    @foreach (var producto in productos)
    {
      <div class="col-4">
        <div class="card" style="width: 18rem;">
          <img src="@producto.ImagenUrl" class="card-img-top" alt="@producto.Nombre" />
          <div class="card-body">
            <h5 class="card-title">@producto.Nombre</h5>
            <p class="card-text">@producto.Descripcion</p>
            <p class="card-text"><strong>Precio: </strong>$@producto.Precio</p>
            <p class="card-text"><strong>Stock: </strong>@producto.Stock</p>
            <a href="#" class="btn btn-primary" @onclick="() => AgregarAlCarrito(producto)">Agregar al carrito</a>
          </div>
        </div>
      </div>
    }
  </div>

  <div class="row mb-4">
    <div class="col-12">
      <button class="btn btn-primary" @onclick="ObtenerProductos">
        Cargar productos
      </button>
    </div>
  </div>

  <div class="row">
    <div class="col-12">
      @if (cargando)
      {
        <div class="alert alert-info">Cargando productos...</div>
      }
      else if (error != null)
      {
        <div class="alert alert-danger">Error: @error</div>
      }
    </div>
  </div>
 </div>








 @code {
  private List<Producto> productos = new();
  private string error;
  private bool cargando = false;

  

  private async Task ObtenerProductos()
  {
    try
    {
      cargando = true;
      error = null;
      productos = await ApiService.ObtenerProductosAsync();
    }
    catch (Exception ex)
    {
      error = ex.Message;
      productos = new();
    }
    finally
    {
      cargando = false;
    }
  }



 private async Task AgregarAlCarrito(Producto producto)
{
    var exito = await ApiService.AgregarProductoAlCarritoAsync(producto);
    if (exito)
    {
        CarritoService.AgregarProducto(producto);
        producto.Stock--; 
        StateHasChanged();
    }
    else
    {
        error = "No se pudo agregar al carrito. Sin stock.";
    }
}

}
