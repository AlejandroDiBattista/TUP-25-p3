@using Cliente.Services
@using Cliente.Modelos
@page "/"
@inject CarritoService CarritoService
@inject ApiService ApiService

<div class="home-container">
    <div style="width:100%;">
        <h2 class="text-center mb-4" style="font-size:2.5rem;font-weight:700;color:#0d6efd;">
            <i class="bi bi-shop"></i> Lista de Productos
        </h2>

        @if (productos is null)
        {
            <div class="text-center mt-5">
                <div class="spinner-border text-primary" role="status"></div>
                <div class="mt-3" style="font-size:1.3rem;">Cargando productos...</div>
            </div>
        }
        else if (productos.Count == 0)
        {
            <div class="alert alert-warning text-center mt-5" style="font-size:1.2rem;">
                <i class="bi bi-emoji-frown"></i> No se encontraron productos.
            </div>
        }
        else
        {
            <div class="productos-grid">
                @foreach (var producto in productos)
                {
                    <div class="producto-card">
                        <div class="producto-nombre">@producto.Nombre</div>
                        <div class="producto-descripcion">@producto.Descripcion</div>
                        <div class="producto-precio">$@producto.Precio</div>
                        <div class="producto-stock">Stock: @producto.Stock</div>
                        <button class="agregar-btn mt-auto" @onclick="@(() => AgregarAlCarrito(producto))">
                            <i class="bi bi-cart-plus"></i> Agregar al carrito
                        </button>
                    </div>
                }
            </div>
        }
    </div>
</div>
@code {
    List<Producto>? productos;

    protected override async Task OnInitializedAsync()
    {
        productos = await ApiService.ObtenerProductosAsync();
    }
    private void AgregarAlCarrito(Producto producto)
    {
        CarritoService.AgregarProducto(producto);
    }
}