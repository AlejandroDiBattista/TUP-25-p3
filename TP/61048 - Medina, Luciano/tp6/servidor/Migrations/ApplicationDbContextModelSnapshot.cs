// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using servidor.Data;

#nullable disable

namespace servidor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("servidor.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoCliente")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailCliente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("servidor.Models.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCompra");
                });

            modelBuilder.Entity("servidor.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Clásico e icónico, floral-aldehídico.",
                            ImagenUrl = "https://i5.walmartimages.com/seo/Chanel-No-5-Eau-de-Parfum-Spray-Perfume-for-Women-3-4-oz-100-ml_a41d96f8-fe32-487d-9f77-ce30d05d8b72.f0424d696214b0da62c279964a8174fd.jpeg",
                            Nombre = "Chanel N°5",
                            Precio = 150.00m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Fresco y amaderado, para hombres.",
                            ImagenUrl = "https://www.myperfumeshop.qa/cdn/shop/files/dior-sauvage-edt-perfume-cologne-408783.png?v=1742526282&width=400",
                            Nombre = "Dior Sauvage",
                            Precio = 120.00m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Oscuro, opulento y especiado.",
                            ImagenUrl = "https://static.sweetcare.com/img/prd/488/v-638235637318829790/tom-ford-000011tf_03.webp",
                            Nombre = "Tom Ford Black Orchid",
                            Precio = 200.00m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Fresco y mineral, unisex.",
                            ImagenUrl = "https://api-assets.wikiparfum.com/_resized/nyf437ux1psfya0ekv1imq67nlx0gq8qxbdkiw2rcrkc47cug5ly8vi1ogyk-w250-q85.webp",
                            Nombre = "Jo Malone Wood Sage & Sea Salt",
                            Precio = 90.00m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Floral blanco, empolvado.",
                            ImagenUrl = "https://mcgrocer.com/cdn/shop/files/gucci-bloom-for-her-eau-de-toilette-50ml-40505979896046.jpg?v=1741307863",
                            Nombre = "Gucci Bloom",
                            Precio = 110.00m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Amaderado especiado, para hombres.",
                            ImagenUrl = "https://www.farmaciasrp.com.ar/22845-large_default/paco-rabanne-1-million-elixir-parfum-intense-50-ml.jpg",
                            Nombre = "Paco Rabanne 1 Million",
                            Precio = 95.00m,
                            Stock = 35
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Gourmand floral, dulce.",
                            ImagenUrl = "https://www.farmacialeloir.com.ar/img/articulos/2024/08/imagen1_lancome_la_vie_est_belle_eau_de_parfum_x_75ml_imagen1.webp",
                            Nombre = "Lancôme La Vie Est Belle",
                            Precio = 105.00m,
                            Stock = 28
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Aromático fougère, para hombres.",
                            ImagenUrl = "https://i5.walmartimages.com/seo/Versace-Eros-Eau-De-Toilette-Natural-Spray-Cologne-for-Men-6-7-oz_db99fcd0-1642-47d8-9fe4-901b3de6fbb8_1.cdfc3acf51b7b1159936f22e63daf3fe.jpeg",
                            Nombre = "Versace Eros",
                            Precio = 85.00m,
                            Stock = 45
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Oriental especiado, café, vainilla.",
                            ImagenUrl = "https://static.sweetcare.com/img/prd/488/v-638200527221023353/yves-saint-laurent-017473ys_03.webp",
                            Nombre = "YSL Black Opium",
                            Precio = 115.00m,
                            Stock = 22
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Floral oriental, dulce.",
                            ImagenUrl = "https://d3cdlnm7te7ky2.cloudfront.net/media/catalog/product/cache/e8f012862bd8df4f2e4f3ce158c4a16c/d/-/d-good-girl-edp_1.jpg",
                            Nombre = "Carolina Herrera Good Girl",
                            Precio = 130.00m,
                            Stock = 18
                        });
                });

            modelBuilder.Entity("servidor.Models.ItemCompra", b =>
                {
                    b.HasOne("servidor.Models.Compra", "Compra")
                        .WithMany("Items")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("servidor.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("servidor.Models.Compra", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
