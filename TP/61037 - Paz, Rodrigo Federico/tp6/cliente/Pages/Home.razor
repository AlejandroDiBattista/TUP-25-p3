@page "/"
@using cliente.Models
@using cliente.Services
@inject ProductoService MiServicioDeProductos
@inject ICarritoService CarritoService

<PageTitle>Catálogo de Productos</PageTitle>

@if (listaProductos == null)
{
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Cargando productos...</span>
        </div>
        <p>Cargando productos...</p>
    </div>
}
else if (!listaProductos.Any())
{
    <div class="alert alert-info">No se encontraron productos disponibles.</div>
}
else
{
    <div class="row">
        @foreach (var producto in listaProductos)
        {
            <div class="col-sm-6 col-md-4 col-lg-3 mb-4">
                <div class="card h-100 shadow-sm">
                    <img src="@producto.ImagenUrl" class="card-img-top" alt="@producto.Nombre" style="height: 200px; object-fit: cover;">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@producto.Nombre</h5>
                        <p class="card-text flex-grow-1">@producto.Descripcion</p>
                        <p class="card-text fs-5"><strong>$@producto.Precio.ToString("N2")</strong></p>
                        <p class="card-text"><small class="text-muted">Stock: @producto.Stock</small></p>
                        
                        <button class="btn btn-primary mt-auto" @onclick="() => AgregarProductoAlCarrito(producto.Id)" disabled="@(producto.Stock == 0)">
                            @(producto.Stock == 0 ? "Sin Stock" : "Agregar al carrito")
                        </button>

                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Producto>? listaProductos;

    protected override async Task OnInitializedAsync()
    {
        // Para simular una carga y ver el spinner, puedes agregar un delay
        // await Task.Delay(1000); 
        
        listaProductos = await MiServicioDeProductos.ObtenerProductosAsync();
    }

    private async Task AgregarProductoAlCarrito(int productoId)
    {
        await CarritoService.AgregarAlCarritoAsync(productoId);
        // Aquí podrías agregar una notificación para el usuario
        Console.WriteLine($"Botón presionado para el producto {productoId}.");
    }
}