// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Servidor.Modelo;

#nullable disable

namespace servidor.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Servidor.Modelo.Carrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("Servidor.Modelo.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoCliente")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailCliente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("Servidor.Modelo.ItemCarrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarritoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCarrito");
                });

            modelBuilder.Entity("Servidor.Modelo.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCompra");
                });

            modelBuilder.Entity("Servidor.Modelo.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Dulce regional tucumano hecho a partir de nuestras cañas de azucar.",
                            ImagenUrl = "images/alfeñiques.jpg",
                            Nombre = "Alfeñique 'El Concepcionense' x12 un.",
                            Precio = 2500m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Mermelada organica fabrícada al estilo casero a partir de Arandanos.",
                            ImagenUrl = "images/mermelada-de-moras-casera.jpg",
                            Nombre = "Mermelada de Arandanos 'Tía Yola' x475 grs.",
                            Precio = 5000m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Dulce regional organico realizado a partir desde el cayote.",
                            ImagenUrl = "images/cayote.jpg",
                            Nombre = "Dulce de cayote 'Tía Yola' x475 grs.",
                            Precio = 3800m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Quesillo de cabra elavorado de manera artesanal por productores de Tafí del Valle",
                            ImagenUrl = "images/quesillo.jpg",
                            Nombre = "Quesillo de cabra 'Sabores del valle' x200 grs.",
                            Precio = 4600m,
                            Stock = 12
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Tabletas de 176grs elaboradas a partir de la caña de azucar",
                            ImagenUrl = "images/tableta.jpg",
                            Nombre = "Tableta 'El Concepcionense'.",
                            Precio = 2500m,
                            Stock = 12
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Licor elaborado desde la naranja Agria perfecto como copetín o para alzar bizcochuelos y tortas.",
                            ImagenUrl = "images/licor.jpg",
                            Nombre = "Licor de Naranja 'Tía yola' x456 ml",
                            Precio = 4000m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Dulce regional realizado por nueces organicas, dulce de leche, glasé y chocolate",
                            ImagenUrl = "images/nueces.jpg",
                            Nombre = "Nueces Confitadas 'Sabores del Valle' x12 un.",
                            Precio = 4000m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Alfajores realizados a partir de dulce de cayote, higo y membrillo.",
                            ImagenUrl = "images/alfajor.jpg",
                            Nombre = "Alfajores de fruta 'Tía Yola' x6 un",
                            Precio = 1800m,
                            Stock = 18
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Charqui elavorado de manera tradicional y sellado al vacío para su conservación por nosotros.",
                            ImagenUrl = "images/charqui.jpg",
                            Nombre = "Charquí de llama 'Sabores del valle' x200 grs.",
                            Precio = 2200m,
                            Stock = 16
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Conserva de carne magra de llama y vizcacha al vinagre con verduras y condimentado con un mix de especias.",
                            ImagenUrl = "images/vizcacha.png",
                            Nombre = "Escabeche de llama y Vizcacha 'Sabores del valle' x450 grs.",
                            Precio = 4700m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 11,
                            Descripcion = "Vino joven realizado a partir de uvas plantadas por las comunidades de Amaicha del Valle. De sabor dulce e intenso.",
                            ImagenUrl = "images/patero.jpg",
                            Nombre = "Vino patero 'Sabores del Valle' x750 ml",
                            Precio = 4750m,
                            Stock = 35
                        });
                });

            modelBuilder.Entity("Servidor.Modelo.ItemCarrito", b =>
                {
                    b.HasOne("Servidor.Modelo.Carrito", "Carrito")
                        .WithMany("Items")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Servidor.Modelo.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Servidor.Modelo.ItemCompra", b =>
                {
                    b.HasOne("Servidor.Modelo.Compra", "Compra")
                        .WithMany("Items")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Servidor.Modelo.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Servidor.Modelo.Carrito", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Servidor.Modelo.Compra", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
