@page "/catalogo"
@using Cliente.Models2
@using Cliente.Services
@inject CartService Cart

<h1 class="my-3">🍭 Catálogo de Productos</h1>

<input class="form-control mb-4" @bind="busqueda" placeholder="Buscar productos..." />

<div class="row">
    @foreach (var producto in ProductosFiltrados)
    {
        <div class="col-md-4 mb-4">
            <div class="card h-100 shadow-sm">
                <img src="@producto.ImagenUrl" alt="@producto.Nombre" class="card-img-top img-fluid" style="height: 200px; object-fit: cover;" />
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">@producto.Nombre</h5>
                    <p class="card-text">@producto.Descripcion</p>
                    <p><strong>Precio:</strong> $@producto.Precio</p>
                    <button class="btn btn-primary mt-auto" @onclick="() => AgregarAlCarrito(producto)">
                        Agregar al carrito
                    </button>
                </div>
            </div>
        </div>
    }
</div>

<div class="text-end mt-4">
    <a href="/carrito" class="btn btn-success">
        🛒 Ver carrito (@Cart.GetCantidadTotal())
    </a>
</div>

@code {
    private string busqueda = string.Empty;

    // Importante: reemplazar URLs externas por rutas locales si usás wwwroot
    private List<Producto> productos = new()
    {
        new Producto { Id = 1, Nombre = "Chocolate Milka", Descripcion = "Tableta de chocolate con leche 100g", Precio = 950, Stock = 10, ImagenUrl = "Imagenes/milka.jpg" },
        new Producto { Id = 2, Nombre = "Bon o Bon", Descripcion = "Bombón de chocolate relleno", Precio = 120, Stock = 20, ImagenUrl = "Imagenes/bonobon.jpg" },
        new Producto { Id = 3, Nombre = "Sugus", Descripcion = "Caramelos masticables surtidos", Precio = 80, Stock = 30, ImagenUrl = "Imagenes/sugus.jpg" },
        new Producto { Id = 4, Nombre = "Rocklets", Descripcion = "Confites de chocolate 40g", Precio = 250, Stock = 15, ImagenUrl = "Imagenes/rocklets_01.jpg" },
        new Producto { Id = 5, Nombre = "Mogul", Descripcion = "Gomitas frutales 50g", Precio = 180, Stock = 12, ImagenUrl = "Imagenes/mogul_01.jpg" },
        new Producto { Id = 6, Nombre = "Tita", Descripcion = "Galletita bañada en chocolate", Precio = 90, Stock = 25, ImagenUrl = "Imagenes/tita_01.jpg" },
        new Producto { Id = 7, Nombre = "Rhodesia", Descripcion = "Galletita bañada en chocolate", Precio = 90, Stock = 22, ImagenUrl = "Imagenes/rhodesia_01.jpg" },
        // Los siguientes deben generarse más tarde
        new Producto { Id = 8, Nombre = "Menta Cristal", Descripcion = "Caramelos de menta", Precio = 70, Stock = 35, ImagenUrl = "Imagenes/menta_01.jpg" },
        new Producto { Id = 9, Nombre = "Caramelos Arcor", Descripcion = "Caramelos duros surtidos", Precio = 60, Stock = 50, ImagenUrl = "Imagenes/arcor_01.jpg" },
        new Producto { Id = 10, Nombre = "Chocolinas", Descripcion = "Galletitas de chocolate 170g", Precio = 350, Stock = 18, ImagenUrl = "Imagenes/chocolinas_01.jpg" },
        new Producto { Id = 11, Nombre = "Alfajor Jorgito", Descripcion = "Alfajor de dulce de leche", Precio = 180, Stock = 40, ImagenUrl = "Imagenes/jorgito_01.jpg" },
        new Producto { Id = 12, Nombre = "Bananita Dolca", Descripcion = "Dulce de banana bañado en chocolate", Precio = 100, Stock = 30, ImagenUrl = "Imagenes/bananita_01.jpg" },
        new Producto { Id = 13, Nombre = "Kinder Bueno", Descripcion = "Barra de chocolate con leche y avellanas", Precio = 400, Stock = 8, ImagenUrl = "Imagenes/kinder_01.jpg" },
        new Producto { Id = 14, Nombre = "KitKat", Descripcion = "Barra de chocolate con obleas", Precio = 350, Stock = 16, ImagenUrl = "Imagenes/kitkat_01.jpg" },
        new Producto { Id = 15, Nombre = "M&M's", Descripcion = "Confites de chocolate 45g", Precio = 300, Stock = 10, ImagenUrl = "Imagenes/mms_01.jpg" }
    };

    private IEnumerable<Producto> ProductosFiltrados =>
        string.IsNullOrWhiteSpace(busqueda)
            ? productos
            : productos.Where(p => p.Nombre.Contains(busqueda, StringComparison.OrdinalIgnoreCase));

    private void AgregarAlCarrito(Producto producto)
    {
        Cart.AddToCart(producto);
    }
}
