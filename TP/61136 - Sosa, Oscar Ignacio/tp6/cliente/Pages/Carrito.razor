@page "/carrito"
@using Cliente.Services
@using Cliente.Models2
@inject CartService Cart

<h3>Carrito de Compras</h3>

@if (Cart.Items.Count == 0)
{
    <p>ðŸ›’ El carrito estÃ¡ vacÃ­o.</p>
}
else
{
    <ul class="list-group">
        @foreach (var item in Cart.Items)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <img src="@item.ImagenUrl" alt="@item.Nombre" style="width: 60px; height: 60px; object-fit: cover; margin-right: 1rem;" />
                    <div>
                        <strong>@item.Nombre</strong><br />
                        <span>$@item.Precio</span>
                    </div>
                </div>
                <button class="btn btn-sm btn-danger" @onclick="() => EliminarProducto(item.Id)">Eliminar</button>
            </li>
        }
    </ul>

    <div class="mt-3">
        <p><strong>Total productos:</strong> @Cart.Items.Count</p>
        <p><strong>Total a pagar:</strong> $@Total.ToString("0.00")</p>

        <button class="btn btn-warning" @onclick="VaciarCarrito">Vaciar carrito</button>
    </div>
}

@code {
    protected override void OnInitialized()
    {
        Cart.OnChange += StateHasChanged;
    }

    private void VaciarCarrito()
    {
        Cart.ClearCart();
    }

    private void EliminarProducto(int id)
    {
        Cart.RemoveFromCart(id);
    }

    private decimal Total => Cart.Items.Sum(p => p.Precio);

    public void Dispose()
    {
        Cart.OnChange -= StateHasChanged;
    }
}
@using System.Linq
@using System.Collections.Generic