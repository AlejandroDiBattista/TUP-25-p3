@page "/productos"
@inject cliente.Services.ApiService ApiService
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject NavigationManager Nav

@using cliente.Models
@using Microsoft.AspNetCore.Components.Web

<PageTitle>Productos</PageTitle>

<div class="container mt-4">
    <h2 style="color:#fd5f00;">Cat√°logo de Productos</h2>
    
    <div class="input-group mb-4" style="max-width:400px;">
        <input class="form-control" placeholder="Buscar productos..." @bind="busqueda" @bind:event="oninput" @onkeypress="BuscarSiEnter" />
        <button class="btn btn-warning" @onclick="Buscar">Buscar</button>
    </div>

    @if (productos != null)
    {
        <p style="color:#fff;">Cantidad de productos: @productos.Count</p>
    }

    @if (productos is null)
    {
        <p class="text-center">Cargando productos...</p>
    }
    else if (!productos.Any())
    {
        <div class="alert alert-warning text-center">Producto no encontrado</div>
    }
    else
    {
        <div class="row">
            @foreach (var producto in productos)
            {
                <div class="col-12 col-sm-6 col-md-4 col-lg-3 mb-4 d-flex align-items-stretch">
                    <div class="card shadow border-0 w-100" style="background:rgba(35,35,55,0.98);">
                        <img src="@producto.ImagenUrl" class="card-img-top" alt="@producto.Nombre" style="height:180px;object-fit:cover;border-radius:12px 12px 0 0;">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title mb-2" style="color:#ff0080;font-weight:700;">@producto.Nombre</h5>
                            <p class="card-text" style="flex:1 1 0; color:#f1f1f1;">@producto.Descripcion</p>
                            <div class="mb-2">
                                <span style="color:#fd5f00; font-weight:600;">$@producto.Precio</span>
                                <span style="color:#00dbde; float:right;">Stock: @producto.Stock</span>
                            </div>
                            <div>
                                <button class="btn btn-primary btn-sm w-100 mb-1" @onclick="() => AgregarAlCarrito(producto.Id)" disabled="@((producto.Stock < 1))">
                                    Agregar al carrito
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    List<Producto>? productos;
    string busqueda = "";
    string mensaje = "";

    [Parameter]
    [SupplyParameterFromQuery(Name = "q")]
    public string? q { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        busqueda = q ?? "";
        productos = await ApiService.GetProductosAsync(busqueda);
    }

    private async Task Buscar()
    {
        Nav.NavigateTo($"/productos?q={busqueda}", forceLoad: false);
    }

    private async Task BuscarSiEnter(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await Buscar();
        }
    }

    private async Task<Guid> ObtenerOCrearCarritoIdAsync()
    {
        var carritoId = await LocalStorage.GetItemAsync<Guid?>("carritoId");
        if (carritoId == null || carritoId == Guid.Empty)
        {
            var nuevoId = await ApiService.CrearCarritoAsync();
            await LocalStorage.SetItemAsync("carritoId", nuevoId);
            return nuevoId;
        }
        return carritoId.Value;
    }

    private async Task AgregarAlCarrito(int productoId)
    {
        var carritoId = await ObtenerOCrearCarritoIdAsync();
        await ApiService.AgregarAlCarritoAsync(carritoId, productoId);
        mensaje = "Producto agregado al carrito";
        StateHasChanged();
        await Task.Delay(1500);
        mensaje = "";
        StateHasChanged();

        Nav.NavigateTo(Nav.Uri, forceLoad: true);
    }
}