@page "/carrito"
@inject TiendaService Tienda
@inject NavigationManager Nav

<h2>Carrito de Compra</h2>

@if (Tienda.Carrito == null || !Tienda.Carrito.Any())
{
    <p>El carrito está vacío.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Producto</th>
                <th>Precio</th>
                <th>Cantidad</th>
                <th>Subtotal</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Tienda.Carrito)
            {
                <tr>
                    <td>@item.producto.Titulo</td>
                    <td>$@(item.producto?.Valor ?? 0)</td>
                    <td>@item.Cantidad</td>
                    <td>$@((item.producto?.Valor ?? 0) * item.Cantidad)</td>
                    <td>
                        <button class="btn btn-sm btn-danger" @onclick="@(() => Quitar(item.producto?.ProductoId ?? 0))">Quitar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <p><strong>Total: $@Tienda.CalcularTotal()</strong></p>

    <button class="btn btn-secondary" @onclick="Vaciar">Vaciar Carrito</button>
    <button class="btn btn-primary" @onclick="ConfirmarCompra">Confirmar Compra</button>
}

@code {
    async Task Quitar(int productoId)
    {
        if (productoId > 0)
        {
            await Tienda.QuitarDelCarrito(productoId);
            StateHasChanged();
        }
    }

    async Task Vaciar()
    {
        await Tienda.VaciarCarrito();
        StateHasChanged();
    }

    async Task ConfirmarCompra()
    {
        Nav.NavigateTo("/confirmar");
        await Task.CompletedTask;
    }
}