// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Servidor.Models;

#nullable disable

namespace servidor.Migrations
{
    [DbContext(typeof(PaginaContext))]
    partial class PaginaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Servidor.Models.ItemOperacion", b =>
                {
                    b.Property<int>("ItemOperacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OperacionId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemOperacionId");

                    b.HasIndex("OperacionId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsOperaciones");
                });

            modelBuilder.Entity("Servidor.Models.Operacion", b =>
                {
                    b.Property<int>("OperacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .HasColumnType("TEXT");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("OperacionId");

                    b.ToTable("Operaciones");
                });

            modelBuilder.Entity("Servidor.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Detalle")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductoId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            CantidadDisponible = 12,
                            Detalle = "Pantalon de algodon con estampado.",
                            ImagenUrl = "img.catalogo/baggie_blanco.jpg",
                            Titulo = "Baggie Crema",
                            Valor = 35200m
                        },
                        new
                        {
                            ProductoId = 2,
                            CantidadDisponible = 8,
                            Detalle = "Pantalon de algodon con estampado.",
                            ImagenUrl = "img.catalogo/baggie_negro.jpeg",
                            Titulo = "Baggie Negro",
                            Valor = 35200m
                        },
                        new
                        {
                            ProductoId = 3,
                            CantidadDisponible = 15,
                            Detalle = "Bermuda de jean",
                            ImagenUrl = "img.catalogo/bermuda.jpeg",
                            Titulo = "Bermuda",
                            Valor = 25000m
                        },
                        new
                        {
                            ProductoId = 4,
                            CantidadDisponible = 15,
                            Detalle = "Buzo de algodon bordado.",
                            ImagenUrl = "img.catalogo/buzo_marron.jpg",
                            Titulo = "Buzo marron",
                            Valor = 40000m
                        },
                        new
                        {
                            ProductoId = 5,
                            CantidadDisponible = 15,
                            Detalle = "Buzo de algodon bordado",
                            ImagenUrl = "img.catalogo/buzo_negro.jpeg",
                            Titulo = "Buzo negro",
                            Valor = 40000m
                        },
                        new
                        {
                            ProductoId = 6,
                            CantidadDisponible = 15,
                            Detalle = "Camisa mangas cortas",
                            ImagenUrl = "img.catalogo/camisa.jpg",
                            Titulo = "Camisa negra",
                            Valor = 37000m
                        },
                        new
                        {
                            ProductoId = 8,
                            CantidadDisponible = 15,
                            Detalle = "Gorra gris gastado",
                            ImagenUrl = "img.catalogo/gorra.jpeg",
                            Titulo = "Gorra",
                            Valor = 15000m
                        },
                        new
                        {
                            ProductoId = 9,
                            CantidadDisponible = 15,
                            Detalle = "Pantalon de jean con bordado",
                            ImagenUrl = "img.catalogo/jean_logo.jpeg",
                            Titulo = "Jean Ahumado",
                            Valor = 40000m
                        },
                        new
                        {
                            ProductoId = 10,
                            CantidadDisponible = 15,
                            Detalle = "Pantalon cargo camuflado gris",
                            ImagenUrl = "img.catalogo/pantalon_camuflado.jpeg",
                            Titulo = "Pantalon cargo",
                            Valor = 41500m
                        });
                });

            modelBuilder.Entity("Servidor.Models.ItemOperacion", b =>
                {
                    b.HasOne("Servidor.Models.Operacion", "Operacion")
                        .WithMany("Items")
                        .HasForeignKey("OperacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Servidor.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operacion");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Servidor.Models.Operacion", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
