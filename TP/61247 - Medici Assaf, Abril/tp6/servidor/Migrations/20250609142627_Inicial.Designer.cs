// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Servidor.Models;

#nullable disable

namespace servidor.Migrations
{
    [DbContext(typeof(PaginaContext))]
    [Migration("20250609142627_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Servidor.Models.ItemOperacion", b =>
                {
                    b.Property<int>("ItemOperacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OperacionId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemOperacionId");

                    b.HasIndex("OperacionId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsOperaciones");
                });

            modelBuilder.Entity("Servidor.Models.Operacion", b =>
                {
                    b.Property<int>("OperacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .HasColumnType("TEXT");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("OperacionId");

                    b.ToTable("Operaciones");
                });

            modelBuilder.Entity("Servidor.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Detalle")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductoId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            CantidadDisponible = 12,
                            Detalle = "RGB, alta precisión",
                            ImagenUrl = "img/mouse.jpg",
                            Titulo = "Mouse Gamer",
                            Valor = 5500m
                        },
                        new
                        {
                            ProductoId = 2,
                            CantidadDisponible = 8,
                            Detalle = "Switch blue, retroiluminado",
                            ImagenUrl = "img/teclado.jpg",
                            Titulo = "Teclado Mecánico",
                            Valor = 10000m
                        },
                        new
                        {
                            ProductoId = 3,
                            CantidadDisponible = 15,
                            Detalle = "Bluetooth, cancelación de ruido",
                            ImagenUrl = "img/auriculares.jpg",
                            Titulo = "Auriculares",
                            Valor = 7800m
                        });
                });

            modelBuilder.Entity("Servidor.Models.ItemOperacion", b =>
                {
                    b.HasOne("Servidor.Models.Operacion", "Operacion")
                        .WithMany("Items")
                        .HasForeignKey("OperacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Servidor.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operacion");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Servidor.Models.Operacion", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
