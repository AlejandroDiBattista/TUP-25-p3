// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Servidor.Data;

#nullable disable

namespace Servidor.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250614013456_ProductosCalzadoIniciales")]
    partial class ProductosCalzadoIniciales
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Servidor.Models.Carrito", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("Servidor.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoCliente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("Servidor.Models.ItemCarrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarritoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCarrito");
                });

            modelBuilder.Entity("Servidor.Models.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCompra");
                });

            modelBuilder.Entity("Servidor.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Botas elegantes para el invierno",
                            ImagenUrl = "https://i.imgur.com/NzYFQbj.jpg",
                            Nombre = "Botas de cuero",
                            Precio = 14999m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Sandalias altas y cómodas para verano",
                            ImagenUrl = "https://i.imgur.com/OnD3Quy.jpg",
                            Nombre = "Sandalias con plataforma",
                            Precio = 8999m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Zapatos de vestir con taco bajo",
                            ImagenUrl = "https://i.imgur.com/xVC0fWk.jpg",
                            Nombre = "Zapatos clásicos",
                            Precio = 11999m,
                            Stock = 12
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Calzado cómodo y moderno para todos los días",
                            ImagenUrl = "https://i.imgur.com/yN6DR6V.jpg",
                            Nombre = "Zapatillas urbanas",
                            Precio = 10499m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Botines de moda con cierre lateral",
                            ImagenUrl = "https://i.imgur.com/tD9XHWE.jpg",
                            Nombre = "Botines con taco",
                            Precio = 13999m,
                            Stock = 8
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Livianas, ideales para el verano",
                            ImagenUrl = "https://i.imgur.com/ZQIRSt7.jpg",
                            Nombre = "Sandalias cruzadas",
                            Precio = 7999m,
                            Stock = 18
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Brillantes y formales, para eventos especiales",
                            ImagenUrl = "https://i.imgur.com/hOsUOAh.jpg",
                            Nombre = "Zapatos de charol",
                            Precio = 12999m,
                            Stock = 6
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Estilo vaquero en cuero sintético",
                            ImagenUrl = "https://i.imgur.com/tJbEvOi.jpg",
                            Nombre = "Botas texanas",
                            Precio = 14999m,
                            Stock = 7
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Frescos, livianos y fáciles de calzar",
                            ImagenUrl = "https://i.imgur.com/NHcvSGQ.jpg",
                            Nombre = "Zuecos de verano",
                            Precio = 6499m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Elegancia para toda ocasión",
                            ImagenUrl = "https://i.imgur.com/Drz98yD.jpg",
                            Nombre = "Zapatos nude",
                            Precio = 11499m,
                            Stock = 10
                        });
                });

            modelBuilder.Entity("Servidor.Models.ItemCarrito", b =>
                {
                    b.HasOne("Servidor.Models.Carrito", "Carrito")
                        .WithMany("Items")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Servidor.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Servidor.Models.ItemCompra", b =>
                {
                    b.HasOne("Servidor.Models.Compra", "Compra")
                        .WithMany("ItemsCompra")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Servidor.Models.Producto", "Producto")
                        .WithMany("ItemsCompra")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Servidor.Models.Carrito", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Servidor.Models.Compra", b =>
                {
                    b.Navigation("ItemsCompra");
                });

            modelBuilder.Entity("Servidor.Models.Producto", b =>
                {
                    b.Navigation("ItemsCompra");
                });
#pragma warning restore 612, 618
        }
    }
}
