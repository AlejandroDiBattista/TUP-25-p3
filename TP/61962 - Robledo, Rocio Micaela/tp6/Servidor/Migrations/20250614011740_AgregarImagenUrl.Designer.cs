// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Servidor.Data;

#nullable disable

namespace Servidor.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250614011740_AgregarImagenUrl")]
    partial class AgregarImagenUrl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Servidor.Models.Carrito", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("Servidor.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoCliente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("Servidor.Models.ItemCarrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarritoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCarrito");
                });

            modelBuilder.Entity("Servidor.Models.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCompra");
                });

            modelBuilder.Entity("Servidor.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Botas elegantes de cuero negro",
                            ImagenUrl = "https://cdn.pixabay.com/photo/2016/11/29/04/17/boots-1867376_960_720.jpg",
                            Nombre = "Botas de Cuero",
                            Precio = 25000m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Sandalias brillantes ideales para verano",
                            ImagenUrl = "https://cdn.pixabay.com/photo/2016/03/23/22/20/women-1274056_960_720.jpg",
                            Nombre = "Sandalias Doradas",
                            Precio = 15000m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Tacones clásicos color rojo pasión",
                            ImagenUrl = "https://cdn.pixabay.com/photo/2015/03/26/09/54/shoes-690123_960_720.jpg",
                            Nombre = "Zapatos de Tacón Rojo",
                            Precio = 18000m,
                            Stock = 12
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Zapatillas cómodas para uso diario",
                            ImagenUrl = "https://cdn.pixabay.com/photo/2016/11/21/12/54/shoes-1840618_960_720.jpg",
                            Nombre = "Zapatillas Urbanas",
                            Precio = 17000m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Ballerinas elegantes y cómodas",
                            ImagenUrl = "https://cdn.pixabay.com/photo/2016/03/23/23/17/ballet-1274376_960_720.jpg",
                            Nombre = "Ballerinas Rosadas",
                            Precio = 12000m,
                            Stock = 18
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Botines con diseño moderno y suave",
                            ImagenUrl = "https://cdn.pixabay.com/photo/2021/03/10/10/14/shoes-6081546_960_720.jpg",
                            Nombre = "Botines Beige",
                            Precio = 22000m,
                            Stock = 11
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Altura y confort para días de calor",
                            ImagenUrl = "https://cdn.pixabay.com/photo/2021/03/30/17/04/shoes-6138400_960_720.jpg",
                            Nombre = "Sandalias de Cuña",
                            Precio = 14000m,
                            Stock = 13
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Perfectos para eventos elegantes",
                            ImagenUrl = "https://cdn.pixabay.com/photo/2017/08/06/12/32/shoes-2590240_960_720.jpg",
                            Nombre = "Zapatos de Fiesta",
                            Precio = 20000m,
                            Stock = 9
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Para un look fuerte y sofisticado",
                            ImagenUrl = "https://cdn.pixabay.com/photo/2017/08/06/17/08/fashion-2590545_960_720.jpg",
                            Nombre = "Botas Largas",
                            Precio = 27000m,
                            Stock = 7
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Elegantes y frescos para cualquier ocasión",
                            ImagenUrl = "https://cdn.pixabay.com/photo/2020/09/01/19/19/shoes-5534840_960_720.jpg",
                            Nombre = "Zapatos Blancos",
                            Precio = 19000m,
                            Stock = 10
                        });
                });

            modelBuilder.Entity("Servidor.Models.ItemCarrito", b =>
                {
                    b.HasOne("Servidor.Models.Carrito", "Carrito")
                        .WithMany("Items")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Servidor.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Servidor.Models.ItemCompra", b =>
                {
                    b.HasOne("Servidor.Models.Compra", "Compra")
                        .WithMany("ItemsCompra")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Servidor.Models.Producto", "Producto")
                        .WithMany("ItemsCompra")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Servidor.Models.Carrito", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Servidor.Models.Compra", b =>
                {
                    b.Navigation("ItemsCompra");
                });

            modelBuilder.Entity("Servidor.Models.Producto", b =>
                {
                    b.Navigation("ItemsCompra");
                });
#pragma warning restore 612, 618
        }
    }
}
