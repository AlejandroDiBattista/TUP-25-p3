@page "/"
@using cliente.Services
@using cliente.Pages
@inject ApiService ApiService
@inject IJSRuntime JS

<PageTitle>Inicio</PageTitle>

<header class="custom-header">
    <div class="header-content">
        <h1 class="store-title">🖤 Black Store</h1>
    </div>

<a class="alert-container" href="/carrito">
    @if (cartCount == 0)
    {
        <div class="alert alert-info">No hay productos en el carrito.</div>
    }
    else if (cartCount == 1)
    {
        <div class="alert alert-warning">Hay 1 producto en el carrito.</div>
    }
    else
    {
        <div class="alert alert-success">Hay @cartCount productos en el carrito</div>
    }
</a>
</header>

<Catalogo CarritoId="carritoId" OnProductoAgregado="ActualizarCartCount" />

@code {
    private int cartCount = 0;
    private int carritoId;

    protected override async Task OnInitializedAsync()
    {
        // Intentar obtener el carritoId de localStorage
        var idStr = await JS.InvokeAsync<string>("localStorage.getItem", "carritoId");
        if (!int.TryParse(idStr, out carritoId) || carritoId == 0)
        {
            // Si no existe, inicializar uno nuevo
            carritoId = await ApiService.InicializarCarritoAsync();
            await JS.InvokeVoidAsync("localStorage.setItem", "carritoId", carritoId.ToString());
        }
        // cartCount = await CarritoService.ObtenerCantidad();
        cartCount = 0; // Cambia esto por lógica real si quieres.
    }

    private void ActualizarCartCount()
    {
        cartCount++;
        StateHasChanged();
    }
}
