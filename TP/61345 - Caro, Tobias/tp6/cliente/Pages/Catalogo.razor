@using cliente.Services
@using cliente.Shared
@using Microsoft.AspNetCore.Components
@inject ApiService ApiService

<div class="container my-4">
    <h2 class="mb-4">Cat√°logo de Productos</h2>

    @if (productos is null)
    {
        <p>Cargando productos...</p>
    }
    else if (productos.Count == 0)
    {
        <p>No hay productos disponibles.</p>
    }
    else
    {
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-4 row-cols-lg-4 g-4">
            @foreach (var producto in productos)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <img src="@producto.ImagenUrl" class="card-img-top" alt="@producto.Nombre" />
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@producto.Nombre</h5>
                            <p class="card-text text-muted">@producto.Descripcion</p>
                            <div class="mt-auto">
                                <p class="fw-bold">$@producto.Precio</p>
                                @if (producto.GetType().GetProperty("Stock") != null)
                                {
                                    <p class="text-secondary">Stock: @(producto.GetType().GetProperty("Stock")?.GetValue(producto, null) ?? "-")</p>
                                }
                                <button class="btn-card" @onclick="() => AgregarAlCarrito(producto.Id)">Agregar al carrito</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    [Parameter] public int CarritoId { get; set; }
    [Parameter] public EventCallback OnProductoAgregado { get; set; }
    private List<Producto> productos;
    private string errorMsg;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            productos = await ApiService.ObtenerProductosAsync();
        }
        catch (Exception ex)
        {
            errorMsg = $"Error al cargar productos: {ex.Message}";
        }
    }

    private async Task AgregarAlCarrito(int productoId)
    {
        try
        {
            await ApiService.AgregarAlCarrito(CarritoId, productoId, 1);
            if (OnProductoAgregado.HasDelegate)
                await OnProductoAgregado.InvokeAsync();
        }
        catch (Exception ex)
        {
            errorMsg = $"Error al agregar al carrito: {ex.Message}";
        }
    }
}