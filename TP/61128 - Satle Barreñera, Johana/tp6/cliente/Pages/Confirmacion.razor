@page "/confirmacion"
@using cliente.Services
@using cliente.Modelos
@inject CarritoService CarritoService
@inject NavigationManager Navigation
@inject ProductoService productoService




<h3 class="titulo-confirmacion">‚úÖ Confirmaci√≥n de Compra</h3>

@if (CarritoService.ProductosEnCarrito.Count == 0)
{
    <p class="mensaje-vacio">Tu carrito est√° vac√≠o.</p>
}
else
{
    <EditForm Model="datosCliente" OnValidSubmit="ConfirmarCompra" class="formulario-compra">
        <DataAnnotationsValidator />
        <ValidationSummary class="errores-validacion" />

        <div class="contenedor-formulario">
            <h4 class="subtitulo">üõí Resumen de Compra</h4>
            <ul class="resumen-compra">
                <li>Total de √≠tems: <strong>@CarritoService.ProductosEnCarrito.Sum(p => p.Cantidad)</strong></li>
                <li>Importe total: <strong>$@CarritoService.CalcularTotal().ToString("N2")</strong></li>
            </ul>

            <h4 class="subtitulo">üßç Datos del Cliente</h4>

            <div class="campo">
                <label>Nombre</label>
                <InputText class="entrada" @bind-Value="datosCliente.Nombre" />
                <ValidationMessage For="@(() => datosCliente.Nombre)" class="mensaje-error" />
            </div>

            <div class="campo">
                <label>Apellido</label>
                <InputText class="entrada" @bind-Value="datosCliente.Apellido" />
                <ValidationMessage For="@(() => datosCliente.Apellido)" class="mensaje-error" />
            </div>

            <div class="campo">
                <label>Email</label>
                <InputText class="entrada" @bind-Value="datosCliente.Email" />
                <ValidationMessage For="@(() => datosCliente.Email)" class="mensaje-error" />
            </div>

            <button type="submit" class="boton-confirmar">‚úÖ Confirmar Compra</button>
        </div>
    </EditForm>
}

    @code {
    private DatosCliente datosCliente = new();

    private async Task ConfirmarCompra()
{
    Console.WriteLine($"Compra confirmada por {datosCliente.Nombre} {datosCliente.Apellido} ({datosCliente.Email})");
    Console.WriteLine($"Total: ${CarritoService.CalcularTotal()}");

    var ok = await CarritoService.ConfirmarCompraAsync(datosCliente);
    Console.WriteLine($"Resultado confirmaci√≥n: {ok}");
    if (ok)
    {
        Console.WriteLine("Redirigiendo al cat√°logo...");
        await productoService.ObtenerProductosAsync();
        Navigation.NavigateTo("/");
    }
}
}
}