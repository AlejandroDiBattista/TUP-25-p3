
@page "/carrito"
@inject Cliente.Services.CarritoService CarritoService

<h2 style="color:#00796b;">ðŸ›’ Mi Carrito</h2>

@if (cargando)
{
    <div style="color:#888;">Cargando carrito...</div>
}
else if (items.Count == 0)
{
    <div style="color:#888;">El carrito estÃ¡ vacÃ­o.</div>
}
else
{
    <table style="width:100%; border-collapse:collapse; margin-bottom:1.5rem;">
        <thead style="background:#e0f7fa;">
            <tr>
                <th style="padding:8px; text-align:left;">Producto</th>
                <th style="padding:8px; text-align:right;">Precio</th>
                <th style="padding:8px; text-align:center;">Cantidad</th>
                <th style="padding:8px; text-align:right;">Subtotal</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in items)
            {
                <tr style="border-bottom:1px solid #eee;">
                    <td style="padding:8px;">
                        <img src="@item.ImagenUrl" alt="@item.Nombre" style="height:40px;vertical-align:middle;margin-right:8px;" />
                        @item.Nombre
                    </td>
                    <td style="padding:8px; text-align:right;">$@item.Precio</td>
                    <td style="padding:8px; text-align:center;">
                        <button @onclick="() => CambiarCantidad(item, -1)" style="background:#bdbdbd; border:none; border-radius:4px; width:28px;">-</button>
                        <span style="margin:0 8px;">@item.Cantidad</span>
                        <button @onclick="() => CambiarCantidad(item, 1)" style="background:#388e3c; color:white; border:none; border-radius:4px; width:28px;">+</button>
                    </td>
                    <td style="padding:8px; text-align:right;">$@(item.Precio * item.Cantidad)</td>
                </tr>
            }
        </tbody>
    </table>
    <div style="text-align:right; font-size:1.2rem; font-weight:bold; color:#00796b;">Total: $@items.Sum(x => x.Precio * x.Cantidad)</div>
    <div style="margin-top:1.5rem; text-align:right;">
        <button @onclick="VaciarCarrito" style="background:#e57373; color:white; border:none; border-radius:4px; padding:0.5rem 1.2rem; margin-right:1rem;">Vaciar carrito</button>
        <button @onclick="() => mostrarFormulario = !mostrarFormulario" style="background:#388e3c; color:white; border:none; border-radius:4px; padding:0.5rem 1.2rem;">Confirmar compra</button>
    </div>
}

@if (mostrarFormulario)
{
    <div style="background:#f1f8e9; border:1px solid #388e3c; border-radius:8px; padding:1.5rem; max-width:400px; margin:2rem auto;">
        <h3 style="color:#388e3c;">Datos del cliente</h3>
        <EditForm Model="datosCliente" OnValidSubmit="OnConfirmarCompra">
            <div style="margin-bottom:1rem;">
                <label>Nombre:</label><br />
                <InputText @bind-Value="datosCliente.Nombre" style="width:100%; padding:0.5rem; border-radius:4px; border:1px solid #ccc;" />
                @if (!string.IsNullOrEmpty(nombreError))
                {
                    <div style="color:#d32f2f; font-size:0.95rem;">@nombreError</div>
                }
            </div>
            <div style="margin-bottom:1rem;">
                <label>Apellido:</label><br />
                <InputText @bind-Value="datosCliente.Apellido" style="width:100%; padding:0.5rem; border-radius:4px; border:1px solid #ccc;" />
                @if (!string.IsNullOrEmpty(apellidoError))
                {
                    <div style="color:#d32f2f; font-size:0.95rem;">@apellidoError</div>
                }
            </div>
            <div style="margin-bottom:1rem;">
                <label>Email:</label><br />
                <InputText @bind-Value="datosCliente.Email" type="email" style="width:100%; padding:0.5rem; border-radius:4px; border:1px solid #ccc;" />
            </div>
            <button type="submit" style="background:#388e3c; color:white; border:none; border-radius:4px; padding:0.5rem 1.2rem;">Confirmar</button>
            <button type="button" @onclick="() => mostrarFormulario = false" style="margin-left:1rem; background:#bdbdbd; color:#333; border:none; border-radius:4px; padding:0.5rem 1.2rem;">Cancelar</button>
        </EditForm>
    </div>
}

@if (!string.IsNullOrEmpty(mensaje))
{
    <div style="margin-top:1rem; color:green; font-weight:bold;">@mensaje</div>
}

@code {
    List<Cliente.Services.CarritoService.ItemCarritoDto> items = new();
    bool cargando = true;
    string mensaje = string.Empty;
    bool mostrarFormulario = false;
    Cliente.Services.CarritoService.DatosClienteDto datosCliente = new();
    string nombreError = string.Empty;
    string apellidoError = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await CargarCarrito();
    }

    async Task CargarCarrito()
    {
        cargando = true;
        items = await CarritoService.ObtenerItemsAsync();
        cargando = false;
        StateHasChanged();
    }

    async Task CambiarCantidad(Cliente.Services.CarritoService.ItemCarritoDto item, int delta)
    {
        int nuevaCantidad = item.Cantidad + delta;
        if (nuevaCantidad < 1) return;
        await CarritoService.AgregarProductoAsync(item.ProductoId, delta);
        await CargarCarrito();
    }

    async Task VaciarCarrito()
    {
        var ok = await CarritoService.VaciarCarritoAsync();
        if (ok)
        {
            mensaje = "Carrito vaciado correctamente.";
            await CargarCarrito();
        }
        else
        {
            mensaje = "No se pudo vaciar el carrito.";
        }
    }

    async Task OnConfirmarCompra()
    {
        nombreError = string.Empty;
        apellidoError = string.Empty;
        bool valido = true;
        if (string.IsNullOrWhiteSpace(datosCliente.Nombre) || datosCliente.Nombre.Any(char.IsDigit))
        {
            nombreError = "El nombre no puede estar vacÃ­o ni contener nÃºmeros.";
            valido = false;
        }
        if (string.IsNullOrWhiteSpace(datosCliente.Apellido) || datosCliente.Apellido.Any(char.IsDigit))
        {
            apellidoError = "El apellido no puede estar vacÃ­o ni contener nÃºmeros.";
            valido = false;
        }
        if (!valido)
        {
            StateHasChanged();
            return;
        }
        var ok = await CarritoService.ConfirmarCompraAsync(datosCliente);
        if (ok)
        {
            mensaje = "Â¡Compra confirmada!";
            mostrarFormulario = false;
            await CargarCarrito();
        }
        else
        {
            mensaje = "No se pudo confirmar la compra.";
        }
    }
}
