@page "/carrito"
@inject Cliente.Services.CarritoService CarritoService
@inject NavigationManager Navigation
@inject Cliente.Services.StockService StockService

<h2 style="color:#00796b;">ðŸ›’ Mi Carrito</h2>

@if (cargando)
{
    <div style="color:#888;">Cargando carrito...</div>
}
else if (items.Count == 0)
{
    <div style="color:#888;">El carrito estÃ¡ vacÃ­o.</div>
}
else
{
    <div style="max-width:1200px; margin:0 auto;">
        <div style="display:grid; grid-template-columns:repeat(auto-fit, minmax(370px, 1fr)); gap:2rem; margin-bottom:2rem;">
            @foreach (var item in items)
            {
                <div style="background:linear-gradient(120deg,#f8fafc 80%,#e3f2fd 100%); border-radius:18px; box-shadow:0 4px 18px rgba(0,0,0,0.08); padding:1.5rem 2rem; display:flex; align-items:center; gap:1.5rem; min-height:120px;">
                    <img src="@item.ImagenUrl" alt="@item.Nombre" style="height:70px; width:70px; object-fit:contain; border-radius:12px; background:#fff; box-shadow:0 2px 8px #e0e0e0;" />
                    <div style="flex:1;">
                        <div style="font-size:1.18rem; font-weight:600; color:#00796b;">@item.Nombre</div>
                        <div style="color:#444; font-size:1.05rem; margin-bottom:0.3rem;">Precio: <b>$@item.Precio</b></div>
                        <div style="color:#888; font-size:0.98rem;">Subtotal: <b>$@(item.Precio * item.Cantidad)</b></div>
                    </div>
                    <div style="display:flex; align-items:center; gap:0.5rem;">
                        <button @onclick="() => CambiarCantidad(item, -1)" style="background:#e0e0e0; border:none; border-radius:50%; width:36px; height:36px; font-size:1.3rem; color:#b71c1c; font-weight:bold; box-shadow:0 1px 4px #eee; transition:background 0.2s;">-</button>
                        <span style="font-size:1.15rem; font-weight:500; min-width:32px; text-align:center;">@item.Cantidad</span>
                        <button @onclick="() => CambiarCantidad(item, 1)" style="background:#388e3c; color:white; border:none; border-radius:50%; width:36px; height:36px; font-size:1.3rem; font-weight:bold; box-shadow:0 1px 4px #b2dfdb; transition:background 0.2s;">+</button>
                    </div>
                </div>
            }
        </div>
        <div style="text-align:right; font-size:1.25rem; font-weight:bold; color:#00796b; margin-bottom:2rem;">Total: $@items.Sum(x => x.Precio * x.Cantidad)</div>
        <div style="display:flex; justify-content:flex-end; gap:1.5rem; margin-bottom:2.5rem;">
            <button @onclick="VaciarCarrito" style="background:linear-gradient(90deg,#ff8a80 0%,#e57373 100%); color:white; border:none; border-radius:8px; padding:1rem 2.5rem; font-size:1.13rem; font-weight:600; letter-spacing:0.01em; box-shadow:0 2px 8px #ffcdd2; transition:background 0.2s;">Vaciar carrito</button>
            <button @onclick="IrAConfirmacionCompra" style="background:linear-gradient(90deg,#43e97b 0%,#38f9d7 100%); color:#155724; border:none; border-radius:8px; padding:1rem 2.5rem; font-size:1.13rem; font-weight:600; letter-spacing:0.01em; box-shadow:0 2px 8px #b2dfdb; transition:background 0.2s;">Confirmar compra</button>
        </div>
    </div>
}


@code {
    List<Cliente.Services.CarritoService.ItemCarritoDto> items = new();
    bool cargando = true;
    string mensaje = string.Empty;


    protected override async Task OnInitializedAsync()
    {
        await CargarCarrito();
    }

    async Task CargarCarrito()
    {
        cargando = true;
        items = await CarritoService.ObtenerItemsAsync();
        cargando = false;
        StateHasChanged();
    }

    async Task CambiarCantidad(Cliente.Services.CarritoService.ItemCarritoDto item, int delta)
    {
        int nuevaCantidad = item.Cantidad + delta;
        if (delta == -1)
        {
            await CarritoService.QuitarUnidadProductoAsync(item.ProductoId);
        }
        else if (delta == 1)
        {
            await CarritoService.AgregarProductoAsync(item.ProductoId, 1);
        }
        await CargarCarrito();
        StockService.NotificarCambioStock();
    }

    async Task VaciarCarrito()
    {
        var ok = await CarritoService.VaciarCarritoAsync();
        if (ok)
        {
            mensaje = "Carrito vaciado correctamente.";
            await CargarCarrito();
            StockService.NotificarCambioStock();
        }
        else
        {
            mensaje = "No se pudo vaciar el carrito.";
        }
    }


    void IrAConfirmacionCompra()
    {
        Navigation.NavigateTo("/confirmacion-compra");
    }
}
