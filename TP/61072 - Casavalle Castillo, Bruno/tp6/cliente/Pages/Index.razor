@page "/"
@inject ProductoService productoService
@inject CarritoService carritoService
@inject BusquedaService busquedaService

<h1 class="mb-4 text-center">Catálogo de Productos</h1>

@if (productosFiltrados == null)
{
    <div class="text-center my-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Cargando...</span>
        </div>
        <p class="mt-3">Cargando productos...</p>
    </div>
}
else if (productosFiltrados.Count == 0)
{
    <p class="text-center text-muted">No hay productos disponibles.</p>
}
else
{
    <div class="container">
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4">
            @foreach (var p in productosFiltrados)
            {
                <div class="col d-flex">
                    <div class="card shadow-sm flex-fill">
                        @if (!string.IsNullOrEmpty(p.ImagenUrl))
                        {
                            <img src="@p.ImagenUrl" class="card-img-top" style="object-fit: cover; height: 200px;"
                                alt="@p.Nombre" />
                        }
                        else
                        {
                            <div class="bg-secondary d-flex align-items-center justify-content-center"
                                style="height: 200px; color: black;">
                                <span>Sin imagen</span>
                            </div>
                        }
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@p.Nombre</h5>
                            <p class="card-text text-truncate" style="max-height: 4.5em; overflow: hidden;">@p.Descripcion</p>
                            <div class="mt-auto">
                                <p class="fw-bold mb-1">$@p.Precio.ToString("N0")</p>
                                <p class="text-muted mb-2">Stock: @p.Stock</p>
                                <button class="btn btn-primary w-100" @onclick="() => AgregarAlCarrito(p)">
                                    <i class="bi bi-cart-plus"></i> Agregar al carrito
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@code {
    private List<Producto>? productos;
    private List<Producto>? productosFiltrados;

    protected override async Task OnInitializedAsync()
    {
        productos = await productoService.ObtenerProductos();
        productosFiltrados = productos;

        busquedaService.OnBusquedaCambiada += FiltrarProductos;
    }

    private void FiltrarProductos(string termino)
    {
        if (string.IsNullOrWhiteSpace(termino))
            productosFiltrados = productos;
        else
            productosFiltrados = productos?
            .Where(p => p.Nombre.Contains(termino, StringComparison.OrdinalIgnoreCase))
            .ToList();

        InvokeAsync(StateHasChanged);
    }

    void AgregarAlCarrito(Producto producto)
    {
        carritoService.AgregarProducto(producto, 1);
    }

    public void Dispose()
    {
        busquedaService.OnBusquedaCambiada -= FiltrarProductos;
    }
}